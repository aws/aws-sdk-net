[ 
    {
        "documentation": "When calling Sts::AssumeRole successfully, find account ID in response",
        "identitySource": "StsCredentialsProvider",
        "id": "STS:1",
        "input": {
            "apiCall": [
                {
                    "name" : "assumeRole",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:sts::123456789001:assumed-role/assume-role-integration-test-role/Name"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When calling Sts::AssumeRoleWithSaml successfully, find account ID in response",
        "identitySource": "StsCredentialsProvider",
        "id": "STS:2",
        "input": {
            "apiCall": [
                {
                    "name" : "assumeRoleWithSaml",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:sts::123456789001:assumed-role/assume-role-integration-test-role/Name"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When calling Sts::AssumeRoleWithWebIdentity successfully, find account ID in response",
        "identitySource": "StsCredentialsProvider",
        "id": "STS:3",
        "input": {
            "apiCall": [
                {
                    "name" : "assumeRoleWithWebIdentity",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:sts::123456789001:assumed-role/assume-role-integration-test-role/Name"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When calling Sts::GetFederationToken successfully, find account ID in response",
        "identitySource": "StsCredentialsProvider",
        "id": "STS:4",
        "input": {
            "apiCall": [
                {
                    "name" : "getFederationToken",
                    "response" : {
                        "federatedUser": {
                            "federatedUserId": "roleId",
                            "arn": "arn:aws:sts::123456789001:assumed-role/assume-role-integration-test-role/Name"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When environment is configured with web identity, find account ID in response",
        "identitySource": "StsCredentialsProvider",
        "id": "STS:5",
        "input": {
            "environment": {
                "AWS_WEB_IDENTITY_TOKEN_FILE": "some_path",
                "AWS_ROLE_ARN" : "arn:aws:iam::123456789001:role",
                "AWS_ACCOUNT_ID": "123456789002",
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar"
            }
        },
        "expected": {
            "accountId": "123456789001"
        }
    },
    {
        "documentation": "When calling Sso::GetCredentials successfully, find account ID in request",
        "identitySource": "SsoCredentialsProvider",
        "id": "SSO:1",
        "input": {
            "apiCall": [
                {
                    "name": "getCredentials",
                    "request": {
                        "accountId": "123456789001"
                    },
                    "response": {
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When calling Sso::GetCredentials unsuccessfully, does not find account ID",
        "identitySource": "SsoCredentialsProvider",
        "id": "SSO:2",
        "input": {
            "apiCall": [
                {
                    "name": "getCredentials",
                    "request": {
                        "accountId": "123456789001"
                    },
                    "error": {}
                }
            ]
        },
        "expected": {}
    },
    {
        "documentation": "When profile is configured with role, accountid and call is successful, find account ID in call response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:1",
        "input": {
            "configFile": "[profile assume-role]\nrole_arn = arn:aws:iam::123456789002:role/MyRole\nsource_profile = assume-creds\n\n[profile assume-creds]\naws_access_key_id = abc123\naws_secret_access_key = def456\naws_account_id = 123456789001",
            "apiCall": [
                {
                    "name" : "assumeRole",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:iam::123456789002:role/MyRole"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789002",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with chained roles, accountid and calls are successful, find account ID in call response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:2",
        "input": {
             "configFile": "[profile final-role]\nrole_arn = arn:aws:iam::123456789003:role/MyRole\nsource_profile = chained-role\n\n[profile chained-role]\nrole_arn = arn:aws:iam::123456789002:role/MyRole\nsource_profile = assume-creds\n\n[profile assume-creds]\naws_access_key_id = abc123\naws_secret_access_key = def456\naws_account_id = 123456789001",
             "apiCall": [
                {
                    "name" : "assumeRole",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:iam::123456789003:role/MyRole"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789003",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with role, accountid and env var credentials_source, find account ID in call response", 
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:3",
        "input": {
            "configFile": "[profile test-role]\nrole_arn = arn:aws:iam::123456789003:role/MyRole\ncredential_source = Environment\naws_account_id = 123456789001\n",
            "environment": {
                "AWS_ACCOUNT_ID": "123456789002",
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar"
            },
            "apiCall": [
                {
                    "name" : "assumeRole",
                    "response" : {
                        "assumedRoleUser": {
                            "assumedRoleId": "roleId",
                            "arn": "arn:aws:iam::123456789003:role/MyRole"
                        },
                        "credentials": {
                            "accessKeyId": "foo",
                            "secretAccessKey": "bar",
                            "sessionToken": "baz"
                        }
                    }
                }
            ]
        },
        "expected": {
            "accountId": "123456789003",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with web identity, find account ID in response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:4",
        "input": {
            "configFile": "[profile test-role]\nrole_arn = arn:aws:iam::123456789003:role/MyRole\nweb_identity_token_file = some_path\ncredential_source = Environment\naws_account_id = 123456789001\n",
            "environment": {
                "AWS_ACCOUNT_ID": "123456789002",
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar"
            }
        },
        "expected": {
            "accountId": "123456789003"
        }
    },   
    {
        "documentation": "When profile is configured with static credentials and accountid, find account id in profile",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:5",
        "input": {
            "configFile": "[default]\naws_access_key_id = foo\naws_secret_access_key = bar\naws_account_id = 123456789001"
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When profile is configured with static credentials but no accountid, does not find accountid",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:6",
        "input": {
            "configFile": "[default]\naws_access_key_id = foo\naws_secret_access_key = bar\n"
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When profile is configured with static credentials, session token and accountid, find account id in profile",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:7",
        "input": {
            "configFile": "[default]\naws_access_key_id = foo\naws_secret_access_key = bar\naws_session_token = baz\naws_account_id = 123456789001"
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with static credentials, session token but no accountid, does not find accountid",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:8",
        "input": {
            "configFile": "[default]\naws_access_key_id = foo\naws_secret_access_key = bar\naws_session_token = baz\n"
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with static credentials, session token but no accountid, does not find accountid",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:9",
        "input": {
            "configFile": "[default]\naws_access_key_id = foo\naws_secret_access_key = bar\naws_session_token = baz\n"
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When static credentials and accountid are configured, finds accountid",
        "identitySource": "StaticCredentialsProvider",
        "id": "STA:2",
        "input": {
            "static": {
                "accountId": "123456789001",
                "accessKeyId": "foo",
                "secretAccessKey": "bar"
            }
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When static credentials but no accountid are configured, does not find accountid",
        "identitySource": "StaticCredentialsProvider",
        "id": "STA:3",
        "input": {
            "static": {
                "accessKeyId": "foo",
                "secretAccessKey": "bar"
            }
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When session credentials and accountid are configured, finds accountid",
        "identitySource": "StaticCredentialsProvider",
        "id": "STA:4",
        "input": {
            "static": {
                "accountId": "123456789001",
                "accessKeyId": "foo",
                "secretAccessKey": "bar",
                "sessionToken": "baz"
            }
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When environment variables contain static credentials and accountid, find account id in env vars",
        "identitySource": "EnvironmentVariableCredentialsProvider",
        "id": "ENV:1",
        "input": {
            "environment": {
                "AWS_ACCOUNT_ID": "123456789001",
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar"
            }
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When environment variables contain static credentials but no accountid, does not find accountid",
        "identitySource": "EnvironmentVariableCredentialsProvider",
        "id": "ENV:2",
        "input": {
            "environment": {
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar"
            }
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    },
    {
        "documentation": "When environment variables contain static credentials, session token and accountid, find account id in env vars",
        "identitySource": "EnvironmentVariableCredentialsProvider",
        "id": "ENV:3",
        "input": {
            "environment": {
                "AWS_ACCOUNT_ID": "123456789001",
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar",
                "AWS_SESSION_TOKEN": "baz"
            }
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When environment variables contain static credentials, session token but no accountid, does not find accountid",
        "identitySource": "EnvironmentVariableCredentialsProvider",
        "id": "ENV:4",
        "input": {
            "environment": {
                "AWS_ACCESS_KEY_ID": "foo",
                "AWS_SECRET_ACCESS_KEY": "bar",
                "AWS_SESSION_TOKEN": "baz"
            }
        },
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When you use process credentials provider and process returns session credentials and accountid, find accountid in response",
        "identitySource": "ProcessCredentialsProvider",
        "id": "PRO:1",
        "input": {
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"\n\"AccountId\": \"123456789001\"}"
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When you use process credentials provider and process returns session credentials but not accountid, does not find accountid",
        "identitySource": "ProcessCredentialsProvider",
        "id": "PRO:2",
        "input": {
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"}"
        },
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with process source and process returns session credentials and accountid, find accountid in response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:10",
        "input": {
            "configFile": "[profile process-role]\ncredential_process = get_credentials.sh\n",
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"\n\"AccountId\": \"123456789002\"}"
        },       
        "expected": {
            "accountId": "123456789002",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with process source, accountid and process returns session credentials and accountid, find accountid in response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:11",
        "input": {
            "configFile": "[profile process-role]\ncredential_process = get_credentials.sh\naws_account_id = 123456789001\n",
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"\n\"AccountId\": \"123456789002\"}"
        },       
        "expected": {
            "accountId": "123456789002",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with process source, accountid and process returns session credentials but no accountid, find accountid in profile",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:12",
        "input": {
            "configFile": "[profile process-role]\ncredential_process = get_credentials.sh\naws_account_id = 123456789001\n",
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"}"
        },       
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with process source and process returns session credentials but no accountid, does not find accountid",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:13",
        "input": {
            "configFile": "[profile process-role]\ncredential_process = get_credentials.sh\n",
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"SessionToken\": \"baz\"}"
        },       
        "expected": {
            "accessKeyId": "foo",
            "secretAccessKey": "bar",
            "sessionToken": "baz"
        }
    },
    {
        "documentation": "When profile is configured with process source and process returns static credentials and accountid, find accountid in response",
        "identitySource": "ProfileCredentialsProvider",
        "id": "CFG:14",
        "input": {
            "configFile": "[profile process-role]\ncredential_process = get_credentials.sh\n",
            "process": "{\"Version\": 1,\n\"AccessKeyId\": \"foo\",\n\"SecretAccessKey\": \"bar\",\n\"AccountId\": \"123456789001\"}"
        },       
        "expected": {
            "accountId": "123456789001",
            "accessKeyId": "foo",
            "secretAccessKey": "bar"
        }
    }
]