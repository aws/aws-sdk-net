/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the logs-2014-03-28.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.CloudWatchLogs.Model
{
    /// <summary>
    /// Container for the parameters to the GetLogGroupFields operation.
    /// Returns a list of the fields that are included in log events in the specified log
    /// group. Includes the percentage of log events that contain each field. The search is
    /// limited to a time period that you specify.
    /// 
    ///  
    /// <para>
    /// You can specify the log group to search by using either <code>logGroupIdentifier</code>
    /// or <code>logGroupName</code>. You must specify one of these parameters, but you can't
    /// specify both. 
    /// </para>
    ///  
    /// <para>
    /// In the results, fields that start with <code>@</code> are fields generated by CloudWatch
    /// Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For
    /// more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
    /// Logs and Discovered Fields</a>.
    /// </para>
    ///  
    /// <para>
    /// The response results are sorted by the frequency percentage, starting with the highest
    /// percentage.
    /// </para>
    ///  
    /// <para>
    /// If you are using CloudWatch cross-account observability, you can use this operation
    /// in a monitoring account and view data from the linked source accounts. For more information,
    /// see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
    /// cross-account observability</a>.
    /// </para>
    /// </summary>
    public partial class GetLogGroupFieldsRequest : AmazonCloudWatchLogsRequest
    {
        private string _logGroupIdentifier;
        private string _logGroupName;
        private long? _time;

        /// <summary>
        /// Gets and sets the property LogGroupIdentifier. 
        /// <para>
        /// Specify either the name or ARN of the log group to view. If the log group is in a
        /// source account and you are using a monitoring account, you must specify the ARN.
        /// </para>
        ///  <note> 
        /// <para>
        ///  You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
        /// but not both. 
        /// </para>
        ///  </note>
        /// </summary>
        [AWSProperty(Min=1, Max=2048)]
        public string LogGroupIdentifier
        {
            get { return this._logGroupIdentifier; }
            set { this._logGroupIdentifier = value; }
        }

        // Check to see if LogGroupIdentifier property is set
        internal bool IsSetLogGroupIdentifier()
        {
            return this._logGroupIdentifier != null;
        }

        /// <summary>
        /// Gets and sets the property LogGroupName. 
        /// <para>
        /// The name of the log group to search.
        /// </para>
        ///  <note> 
        /// <para>
        ///  You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
        /// but not both. 
        /// </para>
        ///  </note>
        /// </summary>
        [AWSProperty(Min=1, Max=512)]
        public string LogGroupName
        {
            get { return this._logGroupName; }
            set { this._logGroupName = value; }
        }

        // Check to see if LogGroupName property is set
        internal bool IsSetLogGroupName()
        {
            return this._logGroupName != null;
        }

        /// <summary>
        /// Gets and sets the property Time. 
        /// <para>
        /// The time to set as the center of the query. If you specify <code>time</code>, the
        /// 15 minutes before this time are queries. If you omit <code>time</code>, the 8 minutes
        /// before and 8 minutes after this time are searched.
        /// </para>
        ///  
        /// <para>
        /// The <code>time</code> value is specified as epoch time, which is the number of seconds
        /// since <code>January 1, 1970, 00:00:00 UTC</code>.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0)]
        public long Time
        {
            get { return this._time.GetValueOrDefault(); }
            set { this._time = value; }
        }

        // Check to see if Time property is set
        internal bool IsSetTime()
        {
            return this._time.HasValue; 
        }

    }
}