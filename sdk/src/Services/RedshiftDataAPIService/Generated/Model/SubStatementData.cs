/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the redshift-data-2019-12-20.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.RedshiftDataAPIService.Model
{
    /// <summary>
    /// Information about an SQL statement.
    /// </summary>
    public partial class SubStatementData
    {
        private DateTime? _createdAt;
        private long? _duration;
        private string _error;
        private bool? _hasResultSet;
        private string _id;
        private string _queryString;
        private long? _redshiftQueryId;
        private long? _resultRows;
        private long? _resultSize;
        private StatementStatusString _status;
        private DateTime? _updatedAt;

        /// <summary>
        /// Gets and sets the property CreatedAt. 
        /// <para>
        /// The date and time (UTC) the statement was created. 
        /// </para>
        /// </summary>
        public DateTime? CreatedAt
        {
            get { return this._createdAt; }
            set { this._createdAt = value; }
        }

        // Check to see if CreatedAt property is set
        internal bool IsSetCreatedAt()
        {
            return this._createdAt.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property Duration. 
        /// <para>
        /// The amount of time in nanoseconds that the statement ran.
        /// </para>
        /// </summary>
        public long? Duration
        {
            get { return this._duration; }
            set { this._duration = value; }
        }

        // Check to see if Duration property is set
        internal bool IsSetDuration()
        {
            return this._duration.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property Error. 
        /// <para>
        /// The error message from the cluster if the SQL statement encountered an error while
        /// running.
        /// </para>
        /// </summary>
        public string Error
        {
            get { return this._error; }
            set { this._error = value; }
        }

        // Check to see if Error property is set
        internal bool IsSetError()
        {
            return this._error != null;
        }

        /// <summary>
        /// Gets and sets the property HasResultSet. 
        /// <para>
        /// A value that indicates whether the statement has a result set. The result set can
        /// be empty. The value is true for an empty result set.
        /// </para>
        /// </summary>
        public bool? HasResultSet
        {
            get { return this._hasResultSet; }
            set { this._hasResultSet = value; }
        }

        // Check to see if HasResultSet property is set
        internal bool IsSetHasResultSet()
        {
            return this._hasResultSet.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property Id. 
        /// <para>
        /// The identifier of the SQL statement. This value is a universally unique identifier
        /// (UUID) generated by Amazon Redshift Data API. A suffix indicates the number of the
        /// SQL statement. For example, <c>d9b6c0c9-0747-4bf4-b142-e8883122f766:2</c> has a suffix
        /// of <c>:2</c> that indicates the second SQL statement of a batch query.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string Id
        {
            get { return this._id; }
            set { this._id = value; }
        }

        // Check to see if Id property is set
        internal bool IsSetId()
        {
            return this._id != null;
        }

        /// <summary>
        /// Gets and sets the property QueryString. 
        /// <para>
        /// The SQL statement text.
        /// </para>
        /// </summary>
        public string QueryString
        {
            get { return this._queryString; }
            set { this._queryString = value; }
        }

        // Check to see if QueryString property is set
        internal bool IsSetQueryString()
        {
            return this._queryString != null;
        }

        /// <summary>
        /// Gets and sets the property RedshiftQueryId. 
        /// <para>
        /// The SQL statement identifier. This value is a universally unique identifier (UUID)
        /// generated by Amazon Redshift Data API. 
        /// </para>
        /// </summary>
        public long? RedshiftQueryId
        {
            get { return this._redshiftQueryId; }
            set { this._redshiftQueryId = value; }
        }

        // Check to see if RedshiftQueryId property is set
        internal bool IsSetRedshiftQueryId()
        {
            return this._redshiftQueryId.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property ResultRows. 
        /// <para>
        /// Either the number of rows returned from the SQL statement or the number of rows affected.
        /// If result size is greater than zero, the result rows can be the number of rows affected
        /// by SQL statements such as INSERT, UPDATE, DELETE, COPY, and others. A <c>-1</c> indicates
        /// the value is null.
        /// </para>
        /// </summary>
        public long? ResultRows
        {
            get { return this._resultRows; }
            set { this._resultRows = value; }
        }

        // Check to see if ResultRows property is set
        internal bool IsSetResultRows()
        {
            return this._resultRows.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property ResultSize. 
        /// <para>
        /// The size in bytes of the returned results. A <c>-1</c> indicates the value is null.
        /// </para>
        /// </summary>
        public long? ResultSize
        {
            get { return this._resultSize; }
            set { this._resultSize = value; }
        }

        // Check to see if ResultSize property is set
        internal bool IsSetResultSize()
        {
            return this._resultSize.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property Status. 
        /// <para>
        /// The status of the SQL statement. An example is the that the SQL statement finished.
        /// 
        /// </para>
        /// </summary>
        public StatementStatusString Status
        {
            get { return this._status; }
            set { this._status = value; }
        }

        // Check to see if Status property is set
        internal bool IsSetStatus()
        {
            return this._status != null;
        }

        /// <summary>
        /// Gets and sets the property UpdatedAt. 
        /// <para>
        /// The date and time (UTC) that the statement metadata was last updated.
        /// </para>
        /// </summary>
        public DateTime? UpdatedAt
        {
            get { return this._updatedAt; }
            set { this._updatedAt = value; }
        }

        // Check to see if UpdatedAt property is set
        internal bool IsSetUpdatedAt()
        {
            return this._updatedAt.HasValue; 
        }

    }
}