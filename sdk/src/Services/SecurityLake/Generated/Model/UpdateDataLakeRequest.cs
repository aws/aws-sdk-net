/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the securitylake-2018-05-10.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.SecurityLake.Model
{
    /// <summary>
    /// Container for the parameters to the UpdateDataLake operation.
    /// You can use <c>UpdateDataLake</c> to specify where to store your security data, how
    /// it should be encrypted at rest and for how long. You can add a <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/manage-regions.html#add-rollup-region">Rollup
    /// Region</a> to consolidate data from multiple Amazon Web Services Regions, replace
    /// default encryption (SSE-S3) with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">Customer
    /// Manged Key</a>, or specify transition and expiration actions through storage <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/lifecycle-management.html">Lifecycle
    /// management</a>. The <c>UpdateDataLake</c> API works as an "upsert" operation that
    /// performs an insert if the specified item or record does not exist, or an update if
    /// it already exists. Security Lake securely stores your data at rest using Amazon Web
    /// Services encryption solutions. For more details, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/data-protection.html">Data
    /// protection in Amazon Security Lake</a>.
    /// 
    ///  
    /// <para>
    /// For example, omitting the key <c>encryptionConfiguration</c> from a Region that is
    /// included in an update call that currently uses KMS will leave that Region's KMS key
    /// in place, but specifying <c>encryptionConfiguration: {kmsKeyId: 'S3_MANAGED_KEY'}</c>
    /// for that same Region will reset the key to <c>S3-managed</c>.
    /// </para>
    ///  
    /// <para>
    /// For more details about lifecycle management and how to update retention settings for
    /// one or more Regions after enabling Security Lake, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/lifecycle-management.html">Amazon
    /// Security Lake User Guide</a>. 
    /// </para>
    /// </summary>
    public partial class UpdateDataLakeRequest : AmazonSecurityLakeRequest
    {
        private List<DataLakeConfiguration> _configurations = AWSConfigs.InitializeCollections ? new List<DataLakeConfiguration>() : null;
        private string _metaStoreManagerRoleArn;

        /// <summary>
        /// Gets and sets the property Configurations. 
        /// <para>
        /// Specifies the Region or Regions that will contribute data to the rollup region.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true, Min=1)]
        public List<DataLakeConfiguration> Configurations
        {
            get { return this._configurations; }
            set { this._configurations = value; }
        }

        // Check to see if Configurations property is set
        internal bool IsSetConfigurations()
        {
            return this._configurations != null && (this._configurations.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property MetaStoreManagerRoleArn. 
        /// <para>
        /// The Amazon Resource Name (ARN) used to create and update the Glue table. This table
        /// contains partitions generated by the ingestion and normalization of Amazon Web Services
        /// log sources and custom sources.
        /// </para>
        /// </summary>
        public string MetaStoreManagerRoleArn
        {
            get { return this._metaStoreManagerRoleArn; }
            set { this._metaStoreManagerRoleArn = value; }
        }

        // Check to see if MetaStoreManagerRoleArn property is set
        internal bool IsSetMetaStoreManagerRoleArn()
        {
            return this._metaStoreManagerRoleArn != null;
        }

    }
}