/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the application-signals-2024-04-15.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.ApplicationSignals.Model
{
    /// <summary>
    /// Container for the parameters to the ListAuditFindings operation.
    /// Returns a list of audit findings that provide automated analysis of service behavior
    /// and root cause analysis. These findings help identify the most significant observations
    /// about your services, including performance issues, anomalies, and potential problems.
    /// The findings are generated using heuristic algorithms based on established troubleshooting
    /// patterns.
    /// </summary>
    public partial class ListAuditFindingsRequest : AmazonApplicationSignalsRequest
    {
        private List<string> _auditors = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private List<AuditTarget> _auditTargets = AWSConfigs.InitializeCollections ? new List<AuditTarget>() : null;
        private DateTime? _endTime;
        private int? _maxResults;
        private string _nextToken;
        private DateTime? _startTime;

        /// <summary>
        /// Gets and sets the property Auditors. 
        /// <para>
        /// A list of auditor names to filter the findings by. Only findings generated by the
        /// specified auditors will be returned.
        /// </para>
        ///  
        /// <para>
        /// The following auditors are available for configuration:
        /// </para>
        ///  <ul> <li> 
        /// <para>
        ///  <c>slo</c> - SloAuditor: Identifies SLO violations and detects breached thresholds
        /// during the Assessment phase.
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>operation_metric</c> - OperationMetricAuditor: Detects anomalies in service operation
        /// metrics from Application Signals RED metrics during the Assessment phase
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>service_quota</c> - ServiceQuotaAuditor: Monitors resource utilization against
        /// service quotas during the Assessment phase
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>trace</c> - TraceAuditor: Performs deep-dive analysis of distributed traces, correlating
        /// traces with breached SLOs or abnormal RED metrics during the Analysis phase
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>dependency_metric</c> - CriticalPathAuditor: Analyzes service dependency impacts
        /// and maps dependency relationships from Application Signals RED metrics during the
        /// Analysis phase
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>top_contributor</c> - TopContributorAuditor: Identifies infrastructure-level contributors
        /// to issues by analyzing EMF logs of Application Signals RED metrics during the Analysis
        /// phase
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>log</c> - LogAuditor: Extracts insights from application logs, categorizing error
        /// types and ranking severity by frequency during the Analysis phase
        /// </para>
        ///  </li> </ul> <note> 
        /// <para>
        ///  <c>InitAuditor</c> and <c>Summarizer</c> auditors are not configurable as they are
        /// automatically triggered during the audit process.
        /// </para>
        ///  </note>
        /// <para />
        /// Starting with version 4 of the SDK this property will default to null. If no data for this property is returned
        /// from the service the property will also be null. This was changed to improve performance and allow the SDK and caller
        /// to distinguish between a property not set or a property being empty to clear out a value. To retain the previous
        /// SDK behavior set the AWSConfigs.InitializeCollections static property to true.
        /// </summary>
        public List<string> Auditors
        {
            get { return this._auditors; }
            set { this._auditors = value; }
        }

        // Check to see if Auditors property is set
        internal bool IsSetAuditors()
        {
            return this._auditors != null && (this._auditors.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property AuditTargets. 
        /// <para>
        /// A list of audit targets to filter the findings by. You can specify services, SLOs,
        /// or service operations to limit the audit findings to specific entities.
        /// </para>
        /// <para />
        /// Starting with version 4 of the SDK this property will default to null. If no data for this property is returned
        /// from the service the property will also be null. This was changed to improve performance and allow the SDK and caller
        /// to distinguish between a property not set or a property being empty to clear out a value. To retain the previous
        /// SDK behavior set the AWSConfigs.InitializeCollections static property to true.
        /// </summary>
        [AWSProperty(Required=true, Min=1, Max=10)]
        public List<AuditTarget> AuditTargets
        {
            get { return this._auditTargets; }
            set { this._auditTargets = value; }
        }

        // Check to see if AuditTargets property is set
        internal bool IsSetAuditTargets()
        {
            return this._auditTargets != null && (this._auditTargets.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property EndTime. 
        /// <para>
        /// The end of the time period to retrieve audit findings for. When used in a raw HTTP
        /// Query API, it is formatted as epoch time in seconds. For example, <c>1698778057</c>
        /// 
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public DateTime? EndTime
        {
            get { return this._endTime; }
            set { this._endTime = value; }
        }

        // Check to see if EndTime property is set
        internal bool IsSetEndTime()
        {
            return this._endTime.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property MaxResults. 
        /// <para>
        /// The maximum number of audit findings to return in one operation. If you omit this
        /// parameter, the default of 10 is used.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=10)]
        public int? MaxResults
        {
            get { return this._maxResults; }
            set { this._maxResults = value; }
        }

        // Check to see if MaxResults property is set
        internal bool IsSetMaxResults()
        {
            return this._maxResults.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property NextToken. 
        /// <para>
        /// Include this value, if it was returned by the previous operation, to get the next
        /// set of audit findings.
        /// </para>
        /// </summary>
        public string NextToken
        {
            get { return this._nextToken; }
            set { this._nextToken = value; }
        }

        // Check to see if NextToken property is set
        internal bool IsSetNextToken()
        {
            return this._nextToken != null;
        }

        /// <summary>
        /// Gets and sets the property StartTime. 
        /// <para>
        /// The start of the time period to retrieve audit findings for. When used in a raw HTTP
        /// Query API, it is formatted as epoch time in seconds. For example, <c>1698778057</c>
        /// 
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public DateTime? StartTime
        {
            get { return this._startTime; }
            set { this._startTime = value; }
        }

        // Check to see if StartTime property is set
        internal bool IsSetStartTime()
        {
            return this._startTime.HasValue; 
        }

    }
}