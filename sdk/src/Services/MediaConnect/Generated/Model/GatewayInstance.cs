/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the mediaconnect-2018-11-14.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.MediaConnect.Model
{
    /// <summary>
    /// The settings for an instance in a gateway.
    /// </summary>
    public partial class GatewayInstance
    {
        private BridgePlacement _bridgePlacement;
        private ConnectionStatus _connectionStatus;
        private string _gatewayArn;
        private string _gatewayInstanceArn;
        private string _instanceId;
        private List<MessageDetail> _instanceMessages = AWSConfigs.InitializeCollections ? new List<MessageDetail>() : null;
        private InstanceState _instanceState;
        private int? _runningBridgeCount;

        /// <summary>
        /// Gets and sets the property BridgePlacement. The availability of the instance to host
        /// new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED,
        /// no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can
        /// be added to this instance.
        /// </summary>
        [AWSProperty(Required=true)]
        public BridgePlacement BridgePlacement
        {
            get { return this._bridgePlacement; }
            set { this._bridgePlacement = value; }
        }

        // Check to see if BridgePlacement property is set
        internal bool IsSetBridgePlacement()
        {
            return this._bridgePlacement != null;
        }

        /// <summary>
        /// Gets and sets the property ConnectionStatus. The connection state of the instance.
        /// </summary>
        [AWSProperty(Required=true)]
        public ConnectionStatus ConnectionStatus
        {
            get { return this._connectionStatus; }
            set { this._connectionStatus = value; }
        }

        // Check to see if ConnectionStatus property is set
        internal bool IsSetConnectionStatus()
        {
            return this._connectionStatus != null;
        }

        /// <summary>
        /// Gets and sets the property GatewayArn. The Amazon Resource Name (ARN) of the instance.
        /// </summary>
        [AWSProperty(Required=true)]
        public string GatewayArn
        {
            get { return this._gatewayArn; }
            set { this._gatewayArn = value; }
        }

        // Check to see if GatewayArn property is set
        internal bool IsSetGatewayArn()
        {
            return this._gatewayArn != null;
        }

        /// <summary>
        /// Gets and sets the property GatewayInstanceArn. The Amazon Resource Name (ARN) of the
        /// gateway.
        /// </summary>
        [AWSProperty(Required=true)]
        public string GatewayInstanceArn
        {
            get { return this._gatewayInstanceArn; }
            set { this._gatewayInstanceArn = value; }
        }

        // Check to see if GatewayInstanceArn property is set
        internal bool IsSetGatewayInstanceArn()
        {
            return this._gatewayInstanceArn != null;
        }

        /// <summary>
        /// Gets and sets the property InstanceId. The managed instance ID generated by the SSM
        /// install. This will begin with "mi-".
        /// </summary>
        [AWSProperty(Required=true)]
        public string InstanceId
        {
            get { return this._instanceId; }
            set { this._instanceId = value; }
        }

        // Check to see if InstanceId property is set
        internal bool IsSetInstanceId()
        {
            return this._instanceId != null;
        }

        /// <summary>
        /// Gets and sets the property InstanceMessages.
        /// </summary>
        public List<MessageDetail> InstanceMessages
        {
            get { return this._instanceMessages; }
            set { this._instanceMessages = value; }
        }

        // Check to see if InstanceMessages property is set
        internal bool IsSetInstanceMessages()
        {
            return this._instanceMessages != null && (this._instanceMessages.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property InstanceState. The status of the instance.
        /// </summary>
        [AWSProperty(Required=true)]
        public InstanceState InstanceState
        {
            get { return this._instanceState; }
            set { this._instanceState = value; }
        }

        // Check to see if InstanceState property is set
        internal bool IsSetInstanceState()
        {
            return this._instanceState != null;
        }

        /// <summary>
        /// Gets and sets the property RunningBridgeCount. The running bridge count.
        /// </summary>
        [AWSProperty(Required=true)]
        public int RunningBridgeCount
        {
            get { return this._runningBridgeCount.GetValueOrDefault(); }
            set { this._runningBridgeCount = value; }
        }

        // Check to see if RunningBridgeCount property is set
        internal bool IsSetRunningBridgeCount()
        {
            return this._runningBridgeCount.HasValue; 
        }

    }
}