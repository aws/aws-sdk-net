/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the eks-auth-2023-11-26.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.EKSAuth.Model
{
    /// <summary>
    /// This is the response object from the AssumeRoleForPodIdentity operation.
    /// </summary>
    public partial class AssumeRoleForPodIdentityResponse : AmazonWebServiceResponse
    {
        private AssumedRoleUser _assumedRoleUser;
        private string _audience;
        private Credentials _credentials;
        private PodIdentityAssociation _podIdentityAssociation;
        private Subject _subject;

        /// <summary>
        /// Gets and sets the property AssumedRoleUser. 
        /// <para>
        /// An object with the permanent IAM role identity and the temporary session name.
        /// </para>
        ///  
        /// <para>
        /// The ARN of the IAM role that the temporary credentials authenticate to.
        /// </para>
        ///  
        /// <para>
        /// The session name of the temporary session requested to STS. The value is a unique
        /// identifier that contains the role ID, a colon (<c>:</c>), and the role session name
        /// of the role that is being assumed. The role ID is generated by IAM when the role is
        /// created. The role session name part of the value follows this format: <c>eks-<i>clustername</i>-<i>podname</i>-<i>random
        /// UUID</i> </c> 
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public AssumedRoleUser AssumedRoleUser
        {
            get { return this._assumedRoleUser; }
            set { this._assumedRoleUser = value; }
        }

        // Check to see if AssumedRoleUser property is set
        internal bool IsSetAssumedRoleUser()
        {
            return this._assumedRoleUser != null;
        }

        /// <summary>
        /// Gets and sets the property Audience. 
        /// <para>
        /// The identity that is allowed to use the credentials. This value is always <c>pods.eks.amazonaws.com</c>.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string Audience
        {
            get { return this._audience; }
            set { this._audience = value; }
        }

        // Check to see if Audience property is set
        internal bool IsSetAudience()
        {
            return this._audience != null;
        }

        /// <summary>
        /// Gets and sets the property Credentials. 
        /// <para>
        /// The <i>Amazon Web Services Signature Version 4</i> type of temporary credentials.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true, Sensitive=true)]
        public Credentials Credentials
        {
            get { return this._credentials; }
            set { this._credentials = value; }
        }

        // Check to see if Credentials property is set
        internal bool IsSetCredentials()
        {
            return this._credentials != null;
        }

        /// <summary>
        /// Gets and sets the property PodIdentityAssociation. 
        /// <para>
        /// The Amazon Resource Name (ARN) and ID of the EKS Pod Identity association.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public PodIdentityAssociation PodIdentityAssociation
        {
            get { return this._podIdentityAssociation; }
            set { this._podIdentityAssociation = value; }
        }

        // Check to see if PodIdentityAssociation property is set
        internal bool IsSetPodIdentityAssociation()
        {
            return this._podIdentityAssociation != null;
        }

        /// <summary>
        /// Gets and sets the property Subject. 
        /// <para>
        /// The name of the Kubernetes service account inside the cluster to associate the IAM
        /// credentials with.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public Subject Subject
        {
            get { return this._subject; }
            set { this._subject = value; }
        }

        // Check to see if Subject property is set
        internal bool IsSetSubject()
        {
            return this._subject != null;
        }

    }
}