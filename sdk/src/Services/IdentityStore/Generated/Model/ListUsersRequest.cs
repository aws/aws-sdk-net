/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the identitystore-2020-06-15.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.IdentityStore.Model
{
    /// <summary>
    /// Container for the parameters to the ListUsers operation.
    /// Lists the attribute name and value of the user that you specified in the search. We
    /// only support <code>UserName</code> as a valid filter attribute path currently, and
    /// filter is required. This API returns minimum attributes, including <code>UserId</code>
    /// and <code>UserName</code> in the response.
    /// </summary>
    public partial class ListUsersRequest : AmazonIdentityStoreRequest
    {
        private List<Filter> _filters = new List<Filter>();
        private string _identityStoreId;
        private int? _maxResults;
        private string _nextToken;

        /// <summary>
        /// Gets and sets the property Filters. 
        /// <para>
        /// A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code>
        /// and <code>ListGroups</code> request. 
        /// </para>
        /// </summary>
        public List<Filter> Filters
        {
            get { return this._filters; }
            set { this._filters = value; }
        }

        // Check to see if Filters property is set
        internal bool IsSetFilters()
        {
            return this._filters != null && this._filters.Count > 0; 
        }

        /// <summary>
        /// Gets and sets the property IdentityStoreId. 
        /// <para>
        /// The globally unique identifier for the identity store, such as d-1234567890. In this
        /// example, d- is a fixed prefix, and 1234567890 is a randomly generated string which
        /// contains number and lower case letters. This value is generated at the time that a
        /// new identity store is created.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true, Min=1, Max=12)]
        public string IdentityStoreId
        {
            get { return this._identityStoreId; }
            set { this._identityStoreId = value; }
        }

        // Check to see if IdentityStoreId property is set
        internal bool IsSetIdentityStoreId()
        {
            return this._identityStoreId != null;
        }

        /// <summary>
        /// Gets and sets the property MaxResults. 
        /// <para>
        /// The maximum number of results to be returned per request, which is used in the <code>ListUsers</code>
        /// and <code>ListGroups</code> request to specify how many results to return in one page.
        /// The length limit is 50 characters.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=50)]
        public int MaxResults
        {
            get { return this._maxResults.GetValueOrDefault(); }
            set { this._maxResults = value; }
        }

        // Check to see if MaxResults property is set
        internal bool IsSetMaxResults()
        {
            return this._maxResults.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property NextToken. 
        /// <para>
        /// The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code>
        /// APIs. This value is generated by the identity store service and is returned in the
        /// API response if the total results are more than the size of one page, and when this
        /// token is used in the API request to search for the next page.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=65535)]
        public string NextToken
        {
            get { return this._nextToken; }
            set { this._nextToken = value; }
        }

        // Check to see if NextToken property is set
        internal bool IsSetNextToken()
        {
            return this._nextToken != null;
        }

    }
}