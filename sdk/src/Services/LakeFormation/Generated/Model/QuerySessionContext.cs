/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the lakeformation-2017-03-31.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.LakeFormation.Model
{
    /// <summary>
    /// A structure used as a protocol between query engines and Lake Formation or Glue. Contains
    /// both a Lake Formation generated authorization identifier and information from the
    /// request's authorization context.
    /// </summary>
    public partial class QuerySessionContext
    {
        private Dictionary<string, string> _additionalContext = AWSConfigs.InitializeCollections ? new Dictionary<string, string>() : null;
        private string _clusterId;
        private string _queryAuthorizationId;
        private string _queryId;
        private DateTime? _queryStartTime;

        /// <summary>
        /// Gets and sets the property AdditionalContext. 
        /// <para>
        /// An opaque string-string map passed by the query engine.
        /// </para>
        /// </summary>
        public Dictionary<string, string> AdditionalContext
        {
            get { return this._additionalContext; }
            set { this._additionalContext = value; }
        }

        // Check to see if AdditionalContext property is set
        internal bool IsSetAdditionalContext()
        {
            return this._additionalContext != null && (this._additionalContext.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property ClusterId. 
        /// <para>
        /// An identifier string for the consumer cluster.
        /// </para>
        /// </summary>
        public string ClusterId
        {
            get { return this._clusterId; }
            set { this._clusterId = value; }
        }

        // Check to see if ClusterId property is set
        internal bool IsSetClusterId()
        {
            return this._clusterId != null;
        }

        /// <summary>
        /// Gets and sets the property QueryAuthorizationId. 
        /// <para>
        /// A cryptographically generated query identifier generated by Glue or Lake Formation.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=255)]
        public string QueryAuthorizationId
        {
            get { return this._queryAuthorizationId; }
            set { this._queryAuthorizationId = value; }
        }

        // Check to see if QueryAuthorizationId property is set
        internal bool IsSetQueryAuthorizationId()
        {
            return this._queryAuthorizationId != null;
        }

        /// <summary>
        /// Gets and sets the property QueryId. 
        /// <para>
        /// A unique identifier generated by the query engine for the query.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=255)]
        public string QueryId
        {
            get { return this._queryId; }
            set { this._queryId = value; }
        }

        // Check to see if QueryId property is set
        internal bool IsSetQueryId()
        {
            return this._queryId != null;
        }

        /// <summary>
        /// Gets and sets the property QueryStartTime. 
        /// <para>
        /// A timestamp provided by the query engine for when the query started.
        /// </para>
        /// </summary>
        public DateTime QueryStartTime
        {
            get { return this._queryStartTime.GetValueOrDefault(); }
            set { this._queryStartTime = value; }
        }

        // Check to see if QueryStartTime property is set
        internal bool IsSetQueryStartTime()
        {
            return this._queryStartTime.HasValue; 
        }

    }
}