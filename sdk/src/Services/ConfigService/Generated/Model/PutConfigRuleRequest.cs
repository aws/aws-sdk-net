/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the config-2014-11-12.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.ConfigService.Model
{
    /// <summary>
    /// Container for the parameters to the PutConfigRule operation.
    /// Adds or updates an Config rule to evaluate if your Amazon Web Services resources comply
    /// with your desired configurations. For information on how many Config rules you can
    /// have per account, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html">
    /// <b>Service Limits</b> </a> in the <i>Config Developer Guide</i>.
    /// 
    ///  
    /// <para>
    /// There are two types of rules: <i>Config Managed Rules</i> and <i>Config Custom Rules</i>.
    /// You can use <c>PutConfigRule</c> to create both Config Managed Rules and Config Custom
    /// Rules.
    /// </para>
    ///  
    /// <para>
    /// Config Managed Rules are predefined, customizable rules created by Config. For a list
    /// of managed rules, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html">List
    /// of Config Managed Rules</a>. If you are adding an Config managed rule, you must specify
    /// the rule's identifier for the <c>SourceIdentifier</c> key.
    /// </para>
    ///  
    /// <para>
    /// Config Custom Rules are rules that you create from scratch. There are two ways to
    /// create Config custom rules: with Lambda functions (<a href="https://docs.aws.amazon.com/config/latest/developerguide/gettingstarted-concepts.html#gettingstarted-concepts-function">
    /// Lambda Developer Guide</a>) and with Guard (<a href="https://github.com/aws-cloudformation/cloudformation-guard">Guard
    /// GitHub Repository</a>), a policy-as-code language. Config custom rules created with
    /// Lambda are called <i>Config Custom Lambda Rules</i> and Config custom rules created
    /// with Guard are called <i>Config Custom Policy Rules</i>.
    /// </para>
    ///  
    /// <para>
    /// If you are adding a new Config Custom Lambda rule, you first need to create an Lambda
    /// function that the rule invokes to evaluate your resources. When you use <c>PutConfigRule</c>
    /// to add a Custom Lambda rule to Config, you must specify the Amazon Resource Name (ARN)
    /// that Lambda assigns to the function. You specify the ARN in the <c>SourceIdentifier</c>
    /// key. This key is part of the <c>Source</c> object, which is part of the <c>ConfigRule</c>
    /// object. 
    /// </para>
    ///  
    /// <para>
    /// For any new Config rule that you add, specify the <c>ConfigRuleName</c> in the <c>ConfigRule</c>
    /// object. Do not specify the <c>ConfigRuleArn</c> or the <c>ConfigRuleId</c>. These
    /// values are generated by Config for new rules.
    /// </para>
    ///  
    /// <para>
    /// If you are updating a rule that you added previously, you can specify the rule by
    /// <c>ConfigRuleName</c>, <c>ConfigRuleId</c>, or <c>ConfigRuleArn</c> in the <c>ConfigRule</c>
    /// data type that you use in this request.
    /// </para>
    ///  
    /// <para>
    /// For more information about developing and using Config rules, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating
    /// Resources with Config Rules</a> in the <i>Config Developer Guide</i>.
    /// </para>
    ///  <note> 
    /// <para>
    ///  <c>PutConfigRule</c> is an idempotent API. Subsequent requests wonâ€™t create a duplicate
    /// resource if one was already created. If a following request has different <c>tags</c>
    /// values, Config will ignore these differences and treat it as an idempotent request
    /// of the previous. In this case, <c>tags</c> will not be updated, even if they are different.
    /// </para>
    ///  </note>
    /// </summary>
    public partial class PutConfigRuleRequest : AmazonConfigServiceRequest
    {
        private ConfigRule _configRule;
        private List<Tag> _tags = AWSConfigs.InitializeCollections ? new List<Tag>() : null;

        /// <summary>
        /// Gets and sets the property ConfigRule. 
        /// <para>
        /// The rule that you want to add to your account.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public ConfigRule ConfigRule
        {
            get { return this._configRule; }
            set { this._configRule = value; }
        }

        // Check to see if ConfigRule property is set
        internal bool IsSetConfigRule()
        {
            return this._configRule != null;
        }

        /// <summary>
        /// Gets and sets the property Tags. 
        /// <para>
        /// An array of tag object.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=50)]
        public List<Tag> Tags
        {
            get { return this._tags; }
            set { this._tags = value; }
        }

        // Check to see if Tags property is set
        internal bool IsSetTags()
        {
            return this._tags != null && (this._tags.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

    }
}