/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the partnercentral-selling-2022-07-26.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.PartnerCentralSelling.Model
{
    /// <summary>
    /// Container for the parameters to the ListOpportunities operation.
    /// This request accepts a list of filters that retrieve opportunity subsets as well as
    /// sort options. This feature is available to partners from <a href="https://partnercentral.awspartner.com/">Partner
    /// Central</a> using the <c>ListOpportunities</c> API action.
    /// 
    ///  
    /// <para>
    /// To synchronize your system with Amazon Web Services, only list the opportunities that
    /// were newly created or updated. We recommend you rely on events emitted by the service
    /// into your Amazon Web Services account’s Amazon EventBridge default event bus, you
    /// can also use the <c>ListOpportunities</c> action.
    /// </para>
    ///  
    /// <para>
    /// We recommend the following approach:
    /// </para>
    ///  <ol> <li> 
    /// <para>
    /// Find the latest <c>LastModifiedDate</c> that you stored, and only use the values that
    /// came from Amazon Web Services. Don’t use values generated by your system.
    /// </para>
    ///  </li> <li> 
    /// <para>
    /// When you send a <c>ListOpportunities</c> request, submit the date in ISO 8601 format
    /// in the <c>AfterLastModifiedDate</c> filter.
    /// </para>
    ///  </li> <li> 
    /// <para>
    /// Amazon Web Services only returns opportunities created or updated on or after that
    /// date and time. Use <c>NextToken</c> to iterate over all pages.
    /// </para>
    ///  </li> </ol>
    /// </summary>
    public partial class ListOpportunitiesRequest : AmazonPartnerCentralSellingRequest
    {
        private string _catalog;
        private List<string> _customerCompanyName = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private List<string> _identifier = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private LastModifiedDate _lastModifiedDate;
        private List<string> _lifeCycleReviewStatus = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private List<string> _lifeCycleStage = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private int? _maxResults;
        private string _nextToken;
        private OpportunitySort _sort;

        /// <summary>
        /// Gets and sets the property Catalog. 
        /// <para>
        /// Specifies the catalog associated with the request. This field takes a string value
        /// from a predefined list: <c>AWS</c> or <c>Sandbox</c>. The catalog determines which
        /// environment the opportunities are listed in. Use <c>AWS</c> for listing real opportunities
        /// in the Amazon Web Services catalog, and <c>Sandbox</c> for testing in secure, isolated
        /// environments.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string Catalog
        {
            get { return this._catalog; }
            set { this._catalog = value; }
        }

        // Check to see if Catalog property is set
        internal bool IsSetCatalog()
        {
            return this._catalog != null;
        }

        /// <summary>
        /// Gets and sets the property CustomerCompanyName. 
        /// <para>
        /// Filters the opportunities based on the customer's company name. This allows partners
        /// to search for opportunities associated with a specific customer by matching the provided
        /// company name string.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=10)]
        public List<string> CustomerCompanyName
        {
            get { return this._customerCompanyName; }
            set { this._customerCompanyName = value; }
        }

        // Check to see if CustomerCompanyName property is set
        internal bool IsSetCustomerCompanyName()
        {
            return this._customerCompanyName != null && (this._customerCompanyName.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property Identifier. 
        /// <para>
        /// Filters the opportunities based on the opportunity identifier. This allows partners
        /// to retrieve specific opportunities by providing their unique identifiers, ensuring
        /// precise results.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=20)]
        public List<string> Identifier
        {
            get { return this._identifier; }
            set { this._identifier = value; }
        }

        // Check to see if Identifier property is set
        internal bool IsSetIdentifier()
        {
            return this._identifier != null && (this._identifier.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property LastModifiedDate. 
        /// <para>
        /// Filters the opportunities based on their last modified date. This filter helps retrieve
        /// opportunities that were updated after the specified date, allowing partners to track
        /// recent changes or updates.
        /// </para>
        /// </summary>
        public LastModifiedDate LastModifiedDate
        {
            get { return this._lastModifiedDate; }
            set { this._lastModifiedDate = value; }
        }

        // Check to see if LastModifiedDate property is set
        internal bool IsSetLastModifiedDate()
        {
            return this._lastModifiedDate != null;
        }

        /// <summary>
        /// Gets and sets the property LifeCycleReviewStatus. 
        /// <para>
        /// Filters the opportunities based on their current lifecycle approval status. Use this
        /// filter to retrieve opportunities with statuses such as <c>Pending Submission</c>,
        /// <c>In Review</c>, <c>Action Required</c>, or <c>Approved</c>.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=10)]
        public List<string> LifeCycleReviewStatus
        {
            get { return this._lifeCycleReviewStatus; }
            set { this._lifeCycleReviewStatus = value; }
        }

        // Check to see if LifeCycleReviewStatus property is set
        internal bool IsSetLifeCycleReviewStatus()
        {
            return this._lifeCycleReviewStatus != null && (this._lifeCycleReviewStatus.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property LifeCycleStage. 
        /// <para>
        /// Filters the opportunities based on their lifecycle stage. This filter allows partners
        /// to retrieve opportunities at various stages in the sales cycle, such as <c>Qualified</c>,
        /// <c>Technical Validation</c>, <c>Business Validation</c>, or <c>Closed Won</c>.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=10)]
        public List<string> LifeCycleStage
        {
            get { return this._lifeCycleStage; }
            set { this._lifeCycleStage = value; }
        }

        // Check to see if LifeCycleStage property is set
        internal bool IsSetLifeCycleStage()
        {
            return this._lifeCycleStage != null && (this._lifeCycleStage.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property MaxResults. 
        /// <para>
        /// Specifies the maximum number of results to return in a single call. This limits the
        /// number of opportunities returned in the response to avoid providing too many results
        /// at once.
        /// </para>
        ///  
        /// <para>
        /// Default: 20
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=100)]
        public int MaxResults
        {
            get { return this._maxResults.GetValueOrDefault(); }
            set { this._maxResults = value; }
        }

        // Check to see if MaxResults property is set
        internal bool IsSetMaxResults()
        {
            return this._maxResults.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property NextToken. 
        /// <para>
        /// A pagination token used to retrieve the next set of results in subsequent calls. This
        /// token is included in the response only if there are additional result pages available.
        /// </para>
        /// </summary>
        public string NextToken
        {
            get { return this._nextToken; }
            set { this._nextToken = value; }
        }

        // Check to see if NextToken property is set
        internal bool IsSetNextToken()
        {
            return this._nextToken != null;
        }

        /// <summary>
        /// Gets and sets the property Sort. 
        /// <para>
        /// An object that specifies how the response is sorted. The default <c>Sort.SortBy</c>
        /// value is <c>LastModifiedDate</c>.
        /// </para>
        /// </summary>
        public OpportunitySort Sort
        {
            get { return this._sort; }
            set { this._sort = value; }
        }

        // Check to see if Sort property is set
        internal bool IsSetSort()
        {
            return this._sort != null;
        }

    }
}