/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the devops-guru-2020-12-01.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.DevOpsGuru.Model
{
    /// <summary>
    /// A logical grouping of Performance Insights metrics for a related subject area. For
    /// example, the <c>db.sql</c> dimension group consists of the following dimensions: <c>db.sql.id</c>,
    /// <c>db.sql.db_id</c>, <c>db.sql.statement</c>, and <c>db.sql.tokenized_id</c>.
    /// 
    ///  <note> 
    /// <para>
    /// Each response element returns a maximum of 500 bytes. For larger elements, such as
    /// SQL statements, only the first 500 bytes are returned.
    /// </para>
    ///  </note> 
    /// <para>
    /// Amazon RDS Performance Insights enables you to monitor and explore different dimensions
    /// of database load based on data captured from a running DB instance. DB load is measured
    /// as average active sessions. Performance Insights provides the data to API consumers
    /// as a two-dimensional time-series dataset. The time dimension provides DB load data
    /// for each time point in the queried time range. Each time point decomposes overall
    /// load in relation to the requested dimensions, measured at that time point. Examples
    /// include SQL, Wait event, User, and Host. 
    /// </para>
    ///  <ul> <li> 
    /// <para>
    /// To learn more about Performance Insights and Amazon Aurora DB instances, go to the
    /// <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html">
    /// Amazon Aurora User Guide</a>. 
    /// </para>
    ///  </li> <li> 
    /// <para>
    /// To learn more about Performance Insights and Amazon RDS DB instances, go to the <a
    /// href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">
    /// Amazon RDS User Guide</a>. 
    /// </para>
    ///  </li> </ul>
    /// </summary>
    public partial class PerformanceInsightsMetricDimensionGroup
    {
        private List<string> _dimensions = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private string _group;
        private int? _limit;

        /// <summary>
        /// Gets and sets the property Dimensions. 
        /// <para>
        /// A list of specific dimensions from a dimension group. If this parameter is not present,
        /// then it signifies that all of the dimensions in the group were requested or are present
        /// in the response.
        /// </para>
        ///  
        /// <para>
        /// Valid values for elements in the <c>Dimensions</c> array are:
        /// </para>
        ///  <ul> <li> 
        /// <para>
        ///  <c>db.application.name</c> - The name of the application that is connected to the
        /// database (only Aurora PostgreSQL and RDS PostgreSQL)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.host.id</c> - The host ID of the connected client (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.host.name</c> - The host name of the connected client (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.name</c> - The name of the database to which the client is connected (only
        /// Aurora PostgreSQL, Amazon RDS PostgreSQL, Aurora MySQL, Amazon RDS MySQL, and MariaDB)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.session_type.name</c> - The type of the current session (only Aurora PostgreSQL
        /// and RDS PostgreSQL)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql.id</c> - The SQL ID generated by Performance Insights (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql.db_id</c> - The SQL ID generated by the database (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql.statement</c> - The SQL text that is being executed (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql.tokenized_id</c> 
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql_tokenized.id</c> - The SQL digest ID generated by Performance Insights
        /// (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql_tokenized.db_id</c> - SQL digest ID generated by the database (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql_tokenized.statement</c> - The SQL digest text (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.user.id</c> - The ID of the user logged in to the database (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.user.name</c> - The name of the user logged in to the database (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.wait_event.name</c> - The event for which the backend is waiting (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.wait_event.type</c> - The type of event for which the backend is waiting (all
        /// engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.wait_event_type.name</c> - The name of the event type for which the backend
        /// is waiting (all engines)
        /// </para>
        ///  </li> </ul>
        /// </summary>
        public List<string> Dimensions
        {
            get { return this._dimensions; }
            set { this._dimensions = value; }
        }

        // Check to see if Dimensions property is set
        internal bool IsSetDimensions()
        {
            return this._dimensions != null && (this._dimensions.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property Group. 
        /// <para>
        /// The name of the dimension group. Its valid values are:
        /// </para>
        ///  <ul> <li> 
        /// <para>
        ///  <c>db</c> - The name of the database to which the client is connected (only Aurora
        /// PostgreSQL, Amazon RDS PostgreSQL, Aurora MySQL, Amazon RDS MySQL, and MariaDB)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.application</c> - The name of the application that is connected to the database
        /// (only Aurora PostgreSQL and RDS PostgreSQL)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.host</c> - The host name of the connected client (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.session_type</c> - The type of the current session (only Aurora PostgreSQL
        /// and RDS PostgreSQL)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql</c> - The SQL that is currently executing (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.sql_tokenized</c> - The SQL digest (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.wait_event</c> - The event for which the database backend is waiting (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.wait_event_type</c> - The type of event for which the database backend is waiting
        /// (all engines)
        /// </para>
        ///  </li> <li> 
        /// <para>
        ///  <c>db.user</c> - The user logged in to the database (all engines)
        /// </para>
        ///  </li> </ul>
        /// </summary>
        public string Group
        {
            get { return this._group; }
            set { this._group = value; }
        }

        // Check to see if Group property is set
        internal bool IsSetGroup()
        {
            return this._group != null;
        }

        /// <summary>
        /// Gets and sets the property Limit. 
        /// <para>
        /// The maximum number of items to fetch for this dimension group.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=10)]
        public int Limit
        {
            get { return this._limit.GetValueOrDefault(); }
            set { this._limit = value; }
        }

        // Check to see if Limit property is set
        internal bool IsSetLimit()
        {
            return this._limit.HasValue; 
        }

    }
}