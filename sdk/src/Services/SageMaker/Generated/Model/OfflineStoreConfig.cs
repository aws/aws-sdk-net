/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the sagemaker-2017-07-24.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.SageMaker.Model
{
    /// <summary>
    /// The configuration of an <code>OfflineStore</code>.
    /// 
    ///  
    /// <para>
    /// Provide an <code>OfflineStoreConfig</code> in a request to <code>CreateFeatureGroup</code>
    /// to create an <code>OfflineStore</code>.
    /// </para>
    ///  
    /// <para>
    /// To encrypt an <code>OfflineStore</code> using at rest data encryption, specify AWS
    /// Key Management Service (KMS) key ID, or <code>KMSKeyId</code>, in <code>S3StorageConfig</code>.
    /// </para>
    /// </summary>
    public partial class OfflineStoreConfig
    {
        private DataCatalogConfig _dataCatalogConfig;
        private bool? _disableGlueTableCreation;
        private S3StorageConfig _s3StorageConfig;

        /// <summary>
        /// Gets and sets the property DataCatalogConfig. 
        /// <para>
        /// The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code>
        /// is created. 
        /// </para>
        /// </summary>
        public DataCatalogConfig DataCatalogConfig
        {
            get { return this._dataCatalogConfig; }
            set { this._dataCatalogConfig = value; }
        }

        // Check to see if DataCatalogConfig property is set
        internal bool IsSetDataCatalogConfig()
        {
            return this._dataCatalogConfig != null;
        }

        /// <summary>
        /// Gets and sets the property DisableGlueTableCreation. 
        /// <para>
        /// Set to <code>True</code> to disable the automatic creation of an AWS Glue table when
        /// configuring an <code>OfflineStore</code>.
        /// </para>
        /// </summary>
        public bool DisableGlueTableCreation
        {
            get { return this._disableGlueTableCreation.GetValueOrDefault(); }
            set { this._disableGlueTableCreation = value; }
        }

        // Check to see if DisableGlueTableCreation property is set
        internal bool IsSetDisableGlueTableCreation()
        {
            return this._disableGlueTableCreation.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property S3StorageConfig. 
        /// <para>
        /// The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public S3StorageConfig S3StorageConfig
        {
            get { return this._s3StorageConfig; }
            set { this._s3StorageConfig = value; }
        }

        // Check to see if S3StorageConfig property is set
        internal bool IsSetS3StorageConfig()
        {
            return this._s3StorageConfig != null;
        }

    }
}