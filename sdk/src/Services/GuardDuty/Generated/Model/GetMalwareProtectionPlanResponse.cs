/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the guardduty-2017-11-28.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.GuardDuty.Model
{
    /// <summary>
    /// This is the response object from the GetMalwareProtectionPlan operation.
    /// </summary>
    public partial class GetMalwareProtectionPlanResponse : AmazonWebServiceResponse
    {
        private MalwareProtectionPlanActions _actions;
        private string _arn;
        private DateTime? _createdAt;
        private CreateProtectedResource _protectedResource;
        private string _role;
        private MalwareProtectionPlanStatus _status;
        private List<MalwareProtectionPlanStatusReason> _statusReasons = AWSConfigs.InitializeCollections ? new List<MalwareProtectionPlanStatusReason>() : null;
        private Dictionary<string, string> _tags = AWSConfigs.InitializeCollections ? new Dictionary<string, string>() : null;

        /// <summary>
        /// Gets and sets the property Actions. 
        /// <para>
        /// Information about whether the tags will be added to the S3 object after scanning.
        /// </para>
        /// </summary>
        public MalwareProtectionPlanActions Actions
        {
            get { return this._actions; }
            set { this._actions = value; }
        }

        // Check to see if Actions property is set
        internal bool IsSetActions()
        {
            return this._actions != null;
        }

        /// <summary>
        /// Gets and sets the property Arn. 
        /// <para>
        /// Amazon Resource Name (ARN) of the protected resource.
        /// </para>
        /// </summary>
        public string Arn
        {
            get { return this._arn; }
            set { this._arn = value; }
        }

        // Check to see if Arn property is set
        internal bool IsSetArn()
        {
            return this._arn != null;
        }

        /// <summary>
        /// Gets and sets the property CreatedAt. 
        /// <para>
        /// The timestamp when the Malware Protection plan resource was created.
        /// </para>
        /// </summary>
        public DateTime CreatedAt
        {
            get { return this._createdAt.GetValueOrDefault(); }
            set { this._createdAt = value; }
        }

        // Check to see if CreatedAt property is set
        internal bool IsSetCreatedAt()
        {
            return this._createdAt.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property ProtectedResource. 
        /// <para>
        /// Information about the protected resource that is associated with the created Malware
        /// Protection plan. Presently, <c>S3Bucket</c> is the only supported protected resource.
        /// </para>
        /// </summary>
        public CreateProtectedResource ProtectedResource
        {
            get { return this._protectedResource; }
            set { this._protectedResource = value; }
        }

        // Check to see if ProtectedResource property is set
        internal bool IsSetProtectedResource()
        {
            return this._protectedResource != null;
        }

        /// <summary>
        /// Gets and sets the property Role. 
        /// <para>
        /// Amazon Resource Name (ARN) of the IAM role that includes the permissions to scan and
        /// add tags to the associated protected resource.
        /// </para>
        /// </summary>
        public string Role
        {
            get { return this._role; }
            set { this._role = value; }
        }

        // Check to see if Role property is set
        internal bool IsSetRole()
        {
            return this._role != null;
        }

        /// <summary>
        /// Gets and sets the property Status. 
        /// <para>
        /// Malware Protection plan status.
        /// </para>
        /// </summary>
        public MalwareProtectionPlanStatus Status
        {
            get { return this._status; }
            set { this._status = value; }
        }

        // Check to see if Status property is set
        internal bool IsSetStatus()
        {
            return this._status != null;
        }

        /// <summary>
        /// Gets and sets the property StatusReasons. 
        /// <para>
        /// Information about the issue code and message associated to the status of your Malware
        /// Protection plan.
        /// </para>
        /// </summary>
        [AWSProperty(Min=0, Max=50)]
        public List<MalwareProtectionPlanStatusReason> StatusReasons
        {
            get { return this._statusReasons; }
            set { this._statusReasons = value; }
        }

        // Check to see if StatusReasons property is set
        internal bool IsSetStatusReasons()
        {
            return this._statusReasons != null && (this._statusReasons.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property Tags. 
        /// <para>
        /// Tags added to the Malware Protection plan resource.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=200)]
        public Dictionary<string, string> Tags
        {
            get { return this._tags; }
            set { this._tags = value; }
        }

        // Check to see if Tags property is set
        internal bool IsSetTags()
        {
            return this._tags != null && (this._tags.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

    }
}