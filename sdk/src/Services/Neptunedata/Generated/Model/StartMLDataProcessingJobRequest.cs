/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the neptunedata-2023-08-01.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.Neptunedata.Model
{
    /// <summary>
    /// Container for the parameters to the StartMLDataProcessingJob operation.
    /// Creates a new Neptune ML data processing job for processing the graph data exported
    /// from Neptune for training. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html">The
    /// <c>dataprocessing</c> command</a>.
    /// 
    ///  
    /// <para>
    /// When invoking this operation in a Neptune cluster that has IAM authentication enabled,
    /// the IAM user or role making the request must have a policy attached that allows the
    /// <a href="https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#startmlmodeldataprocessingjob">neptune-db:StartMLModelDataProcessingJob</a>
    /// IAM action in that cluster.
    /// </para>
    /// </summary>
    public partial class StartMLDataProcessingJobRequest : AmazonNeptunedataRequest
    {
        private string _configFileName;
        private string _id;
        private string _inputDataS3Location;
        private string _modelType;
        private string _neptuneIamRoleArn;
        private string _previousDataProcessingJobId;
        private string _processedDataS3Location;
        private string _processingInstanceType;
        private int? _processingInstanceVolumeSizeInGB;
        private int? _processingTimeOutInSeconds;
        private string _s3OutputEncryptionKMSKey;
        private string _sagemakerIamRoleArn;
        private List<string> _securityGroupIds = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private List<string> _subnets = AWSConfigs.InitializeCollections ? new List<string>() : null;
        private string _volumeEncryptionKMSKey;

        /// <summary>
        /// Gets and sets the property ConfigFileName. 
        /// <para>
        /// A data specification file that describes how to load the exported graph data for training.
        /// The file is automatically generated by the Neptune export toolkit. The default is
        /// <c>training-data-configuration.json</c>.
        /// </para>
        /// </summary>
        public string ConfigFileName
        {
            get { return this._configFileName; }
            set { this._configFileName = value; }
        }

        // Check to see if ConfigFileName property is set
        internal bool IsSetConfigFileName()
        {
            return this._configFileName != null;
        }

        /// <summary>
        /// Gets and sets the property Id. 
        /// <para>
        /// A unique identifier for the new job. The default is an autogenerated UUID.
        /// </para>
        /// </summary>
        public string Id
        {
            get { return this._id; }
            set { this._id = value; }
        }

        // Check to see if Id property is set
        internal bool IsSetId()
        {
            return this._id != null;
        }

        /// <summary>
        /// Gets and sets the property InputDataS3Location. 
        /// <para>
        /// The URI of the Amazon S3 location where you want SageMaker to download the data needed
        /// to run the data processing job.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string InputDataS3Location
        {
            get { return this._inputDataS3Location; }
            set { this._inputDataS3Location = value; }
        }

        // Check to see if InputDataS3Location property is set
        internal bool IsSetInputDataS3Location()
        {
            return this._inputDataS3Location != null;
        }

        /// <summary>
        /// Gets and sets the property ModelType. 
        /// <para>
        /// One of the two model types that Neptune ML currently supports: heterogeneous graph
        /// models (<c>heterogeneous</c>), and knowledge graph (<c>kge</c>). The default is none.
        /// If not specified, Neptune ML chooses the model type automatically based on the data.
        /// </para>
        /// </summary>
        public string ModelType
        {
            get { return this._modelType; }
            set { this._modelType = value; }
        }

        // Check to see if ModelType property is set
        internal bool IsSetModelType()
        {
            return this._modelType != null;
        }

        /// <summary>
        /// Gets and sets the property NeptuneIamRoleArn. 
        /// <para>
        /// The Amazon Resource Name (ARN) of an IAM role that SageMaker can assume to perform
        /// tasks on your behalf. This must be listed in your DB cluster parameter group or an
        /// error will occur.
        /// </para>
        /// </summary>
        public string NeptuneIamRoleArn
        {
            get { return this._neptuneIamRoleArn; }
            set { this._neptuneIamRoleArn = value; }
        }

        // Check to see if NeptuneIamRoleArn property is set
        internal bool IsSetNeptuneIamRoleArn()
        {
            return this._neptuneIamRoleArn != null;
        }

        /// <summary>
        /// Gets and sets the property PreviousDataProcessingJobId. 
        /// <para>
        /// The job ID of a completed data processing job run on an earlier version of the data.
        /// </para>
        /// </summary>
        public string PreviousDataProcessingJobId
        {
            get { return this._previousDataProcessingJobId; }
            set { this._previousDataProcessingJobId = value; }
        }

        // Check to see if PreviousDataProcessingJobId property is set
        internal bool IsSetPreviousDataProcessingJobId()
        {
            return this._previousDataProcessingJobId != null;
        }

        /// <summary>
        /// Gets and sets the property ProcessedDataS3Location. 
        /// <para>
        /// The URI of the Amazon S3 location where you want SageMaker to save the results of
        /// a data processing job.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string ProcessedDataS3Location
        {
            get { return this._processedDataS3Location; }
            set { this._processedDataS3Location = value; }
        }

        // Check to see if ProcessedDataS3Location property is set
        internal bool IsSetProcessedDataS3Location()
        {
            return this._processedDataS3Location != null;
        }

        /// <summary>
        /// Gets and sets the property ProcessingInstanceType. 
        /// <para>
        /// The type of ML instance used during data processing. Its memory should be large enough
        /// to hold the processed dataset. The default is the smallest ml.r5 type whose memory
        /// is ten times larger than the size of the exported graph data on disk.
        /// </para>
        /// </summary>
        public string ProcessingInstanceType
        {
            get { return this._processingInstanceType; }
            set { this._processingInstanceType = value; }
        }

        // Check to see if ProcessingInstanceType property is set
        internal bool IsSetProcessingInstanceType()
        {
            return this._processingInstanceType != null;
        }

        /// <summary>
        /// Gets and sets the property ProcessingInstanceVolumeSizeInGB. 
        /// <para>
        /// The disk volume size of the processing instance. Both input data and processed data
        /// are stored on disk, so the volume size must be large enough to hold both data sets.
        /// The default is 0. If not specified or 0, Neptune ML chooses the volume size automatically
        /// based on the data size.
        /// </para>
        /// </summary>
        public int ProcessingInstanceVolumeSizeInGB
        {
            get { return this._processingInstanceVolumeSizeInGB.GetValueOrDefault(); }
            set { this._processingInstanceVolumeSizeInGB = value; }
        }

        // Check to see if ProcessingInstanceVolumeSizeInGB property is set
        internal bool IsSetProcessingInstanceVolumeSizeInGB()
        {
            return this._processingInstanceVolumeSizeInGB.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property ProcessingTimeOutInSeconds. 
        /// <para>
        /// Timeout in seconds for the data processing job. The default is 86,400 (1 day).
        /// </para>
        /// </summary>
        public int ProcessingTimeOutInSeconds
        {
            get { return this._processingTimeOutInSeconds.GetValueOrDefault(); }
            set { this._processingTimeOutInSeconds = value; }
        }

        // Check to see if ProcessingTimeOutInSeconds property is set
        internal bool IsSetProcessingTimeOutInSeconds()
        {
            return this._processingTimeOutInSeconds.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property S3OutputEncryptionKMSKey. 
        /// <para>
        /// The Amazon Key Management Service (Amazon KMS) key that SageMaker uses to encrypt
        /// the output of the processing job. The default is none.
        /// </para>
        /// </summary>
        public string S3OutputEncryptionKMSKey
        {
            get { return this._s3OutputEncryptionKMSKey; }
            set { this._s3OutputEncryptionKMSKey = value; }
        }

        // Check to see if S3OutputEncryptionKMSKey property is set
        internal bool IsSetS3OutputEncryptionKMSKey()
        {
            return this._s3OutputEncryptionKMSKey != null;
        }

        /// <summary>
        /// Gets and sets the property SagemakerIamRoleArn. 
        /// <para>
        /// The ARN of an IAM role for SageMaker execution. This must be listed in your DB cluster
        /// parameter group or an error will occur.
        /// </para>
        /// </summary>
        public string SagemakerIamRoleArn
        {
            get { return this._sagemakerIamRoleArn; }
            set { this._sagemakerIamRoleArn = value; }
        }

        // Check to see if SagemakerIamRoleArn property is set
        internal bool IsSetSagemakerIamRoleArn()
        {
            return this._sagemakerIamRoleArn != null;
        }

        /// <summary>
        /// Gets and sets the property SecurityGroupIds. 
        /// <para>
        /// The VPC security group IDs. The default is None.
        /// </para>
        /// </summary>
        public List<string> SecurityGroupIds
        {
            get { return this._securityGroupIds; }
            set { this._securityGroupIds = value; }
        }

        // Check to see if SecurityGroupIds property is set
        internal bool IsSetSecurityGroupIds()
        {
            return this._securityGroupIds != null && (this._securityGroupIds.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property Subnets. 
        /// <para>
        /// The IDs of the subnets in the Neptune VPC. The default is None.
        /// </para>
        /// </summary>
        public List<string> Subnets
        {
            get { return this._subnets; }
            set { this._subnets = value; }
        }

        // Check to see if Subnets property is set
        internal bool IsSetSubnets()
        {
            return this._subnets != null && (this._subnets.Count > 0 || !AWSConfigs.InitializeCollections); 
        }

        /// <summary>
        /// Gets and sets the property VolumeEncryptionKMSKey. 
        /// <para>
        /// The Amazon Key Management Service (Amazon KMS) key that SageMaker uses to encrypt
        /// data on the storage volume attached to the ML compute instances that run the training
        /// job. The default is None.
        /// </para>
        /// </summary>
        public string VolumeEncryptionKMSKey
        {
            get { return this._volumeEncryptionKMSKey; }
            set { this._volumeEncryptionKMSKey = value; }
        }

        // Check to see if VolumeEncryptionKMSKey property is set
        internal bool IsSetVolumeEncryptionKMSKey()
        {
            return this._volumeEncryptionKMSKey != null;
        }

    }
}