/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the swf-2012-01-25.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

#pragma warning disable CS0612,CS0618,CS1570
namespace Amazon.SimpleWorkflow.Model
{
    /// <summary>
    /// Container for the parameters to the RecordActivityTaskHeartbeat operation.
    /// Used by activity workers to report to the service that the <a>ActivityTask</a> represented
    /// by the specified <c>taskToken</c> is still making progress. The worker can also specify
    /// details of the progress, for example percent complete, using the <c>details</c> parameter.
    /// This action can also be used by the worker as a mechanism to check if cancellation
    /// is being requested for the activity task. If a cancellation is being attempted for
    /// the specified task, then the boolean <c>cancelRequested</c> flag returned by the service
    /// is set to <c>true</c>.
    /// 
    ///  
    /// <para>
    /// This action resets the <c>taskHeartbeatTimeout</c> clock. The <c>taskHeartbeatTimeout</c>
    /// is specified in <a>RegisterActivityType</a>.
    /// </para>
    ///  
    /// <para>
    /// This action doesn't in itself create an event in the workflow execution history. However,
    /// if the task times out, the workflow execution history contains a <c>ActivityTaskTimedOut</c>
    /// event that contains the information from the last heartbeat generated by the activity
    /// worker.
    /// </para>
    ///  <note> 
    /// <para>
    /// The <c>taskStartToCloseTimeout</c> of an activity type is the maximum duration of
    /// an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a> requests
    /// received. The <c>taskStartToCloseTimeout</c> is also specified in <a>RegisterActivityType</a>.
    /// </para>
    ///  </note> <note> 
    /// <para>
    /// This operation is only useful for long-lived activities to report liveliness of the
    /// task and to determine if a cancellation is being attempted.
    /// </para>
    ///  </note> <important> 
    /// <para>
    /// If the <c>cancelRequested</c> flag returns <c>true</c>, a cancellation is being attempted.
    /// If the worker can cancel the activity, it should respond with <a>RespondActivityTaskCanceled</a>.
    /// Otherwise, it should ignore the cancellation request.
    /// </para>
    ///  </important> 
    /// <para>
    ///  <b>Access Control</b> 
    /// </para>
    ///  
    /// <para>
    /// You can use IAM policies to control this action's access to Amazon SWF resources as
    /// follows:
    /// </para>
    ///  <ul> <li> 
    /// <para>
    /// Use a <c>Resource</c> element with the domain name to limit the action to only specified
    /// domains.
    /// </para>
    ///  </li> <li> 
    /// <para>
    /// Use an <c>Action</c> element to allow or deny permission to call this action.
    /// </para>
    ///  </li> <li> 
    /// <para>
    /// You cannot use an IAM policy to constrain this action's parameters.
    /// </para>
    ///  </li> </ul> 
    /// <para>
    /// If the caller doesn't have sufficient permissions to invoke the action, or the parameter
    /// values fall outside the specified constraints, the action fails. The associated event
    /// attribute's <c>cause</c> parameter is set to <c>OPERATION_NOT_PERMITTED</c>. For details
    /// and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    /// IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
    /// </para>
    /// </summary>
    public partial class RecordActivityTaskHeartbeatRequest : AmazonSimpleWorkflowRequest
    {
        private string _details;
        private string _taskToken;

        /// <summary>
        /// Gets and sets the property Details. 
        /// <para>
        /// If specified, contains details about the progress of the task.
        /// </para>
        /// </summary>
        [AWSProperty(Max=2048)]
        public string Details
        {
            get { return this._details; }
            set { this._details = value; }
        }

        // Check to see if Details property is set
        internal bool IsSetDetails()
        {
            return this._details != null;
        }

        /// <summary>
        /// Gets and sets the property TaskToken. 
        /// <para>
        /// The <c>taskToken</c> of the <a>ActivityTask</a>.
        /// </para>
        ///  <important> 
        /// <para>
        ///  <c>taskToken</c> is generated by the service and should be treated as an opaque value.
        /// If the task is passed to another process, its <c>taskToken</c> must also be passed.
        /// This enables it to provide its progress and respond with results. 
        /// </para>
        ///  </important>
        /// </summary>
        [AWSProperty(Required=true, Min=1, Max=1024)]
        public string TaskToken
        {
            get { return this._taskToken; }
            set { this._taskToken = value; }
        }

        // Check to see if TaskToken property is set
        internal bool IsSetTaskToken()
        {
            return this._taskToken != null;
        }

    }
}