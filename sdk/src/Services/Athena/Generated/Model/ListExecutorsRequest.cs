/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the athena-2017-05-18.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.Athena.Model
{
    /// <summary>
    /// Container for the parameters to the ListExecutors operation.
    /// Lists, in descending order, the executors that joined a session. Newer executors are
    /// listed first; older executors are listed later. The result can be optionally filtered
    /// by state.
    /// </summary>
    public partial class ListExecutorsRequest : AmazonAthenaRequest
    {
        private ExecutorState _executorStateFilter;
        private int? _maxResults;
        private string _nextToken;
        private string _sessionId;

        /// <summary>
        /// Gets and sets the property ExecutorStateFilter. 
        /// <para>
        /// A filter for a specific executor state. A description of each state follows.
        /// </para>
        ///  
        /// <para>
        ///  <code>CREATING</code> - The executor is being started, including acquiring resources.
        /// </para>
        ///  
        /// <para>
        ///  <code>CREATED</code> - The executor has been started.
        /// </para>
        ///  
        /// <para>
        ///  <code>REGISTERED</code> - The executor has been registered.
        /// </para>
        ///  
        /// <para>
        ///  <code>TERMINATING</code> - The executor is in the process of shutting down.
        /// </para>
        ///  
        /// <para>
        ///  <code>TERMINATED</code> - The executor is no longer running.
        /// </para>
        ///  
        /// <para>
        ///  <code>FAILED</code> - Due to a failure, the executor is no longer running.
        /// </para>
        /// </summary>
        public ExecutorState ExecutorStateFilter
        {
            get { return this._executorStateFilter; }
            set { this._executorStateFilter = value; }
        }

        // Check to see if ExecutorStateFilter property is set
        internal bool IsSetExecutorStateFilter()
        {
            return this._executorStateFilter != null;
        }

        /// <summary>
        /// Gets and sets the property MaxResults. 
        /// <para>
        /// The maximum number of executors to return.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=100)]
        public int MaxResults
        {
            get { return this._maxResults.GetValueOrDefault(); }
            set { this._maxResults = value; }
        }

        // Check to see if MaxResults property is set
        internal bool IsSetMaxResults()
        {
            return this._maxResults.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property NextToken. 
        /// <para>
        /// A token generated by the Athena service that specifies where to continue pagination
        /// if a previous request was truncated. To obtain the next set of pages, pass in the
        /// <code>NextToken</code> from the response object of the previous page call.
        /// </para>
        /// </summary>
        [AWSProperty(Max=2048)]
        public string NextToken
        {
            get { return this._nextToken; }
            set { this._nextToken = value; }
        }

        // Check to see if NextToken property is set
        internal bool IsSetNextToken()
        {
            return this._nextToken != null;
        }

        /// <summary>
        /// Gets and sets the property SessionId. 
        /// <para>
        /// The session ID.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true, Min=1, Max=256)]
        public string SessionId
        {
            get { return this._sessionId; }
            set { this._sessionId = value; }
        }

        // Check to see if SessionId property is set
        internal bool IsSetSessionId()
        {
            return this._sessionId != null;
        }

    }
}