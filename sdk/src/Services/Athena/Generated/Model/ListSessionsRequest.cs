/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the athena-2017-05-18.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;
using System.Net;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.Athena.Model
{
    /// <summary>
    /// Container for the parameters to the ListSessions operation.
    /// Lists the sessions in a workgroup that are in an active state like <code>CREATING</code>,
    /// <code>CREATED</code>, <code>IDLE</code>, or <code>BUSY</code>. Newer sessions are
    /// listed first; older sessions are listed later.
    /// </summary>
    public partial class ListSessionsRequest : AmazonAthenaRequest
    {
        private int? _maxResults;
        private string _nextToken;
        private SessionState _stateFilter;
        private string _workGroup;

        /// <summary>
        /// Gets and sets the property MaxResults. 
        /// <para>
        /// The maximum number of sessions to return.
        /// </para>
        /// </summary>
        [AWSProperty(Min=1, Max=100)]
        public int MaxResults
        {
            get { return this._maxResults.GetValueOrDefault(); }
            set { this._maxResults = value; }
        }

        // Check to see if MaxResults property is set
        internal bool IsSetMaxResults()
        {
            return this._maxResults.HasValue; 
        }

        /// <summary>
        /// Gets and sets the property NextToken. 
        /// <para>
        /// A token generated by the Athena service that specifies where to continue pagination
        /// if a previous request was truncated. To obtain the next set of pages, pass in the
        /// <code>NextToken</code> from the response object of the previous page call.
        /// </para>
        /// </summary>
        [AWSProperty(Max=2048)]
        public string NextToken
        {
            get { return this._nextToken; }
            set { this._nextToken = value; }
        }

        // Check to see if NextToken property is set
        internal bool IsSetNextToken()
        {
            return this._nextToken != null;
        }

        /// <summary>
        /// Gets and sets the property StateFilter. 
        /// <para>
        /// A filter for a specific session state. A description of each state follows.
        /// </para>
        ///  
        /// <para>
        ///  <code>CREATING</code> - The session is being started, including acquiring resources.
        /// </para>
        ///  
        /// <para>
        ///  <code>CREATED</code> - The session has been started.
        /// </para>
        ///  
        /// <para>
        ///  <code>IDLE</code> - The session is able to accept a calculation.
        /// </para>
        ///  
        /// <para>
        ///  <code>BUSY</code> - The session is processing another task and is unable to accept
        /// a calculation.
        /// </para>
        ///  
        /// <para>
        ///  <code>TERMINATING</code> - The session is in the process of shutting down.
        /// </para>
        ///  
        /// <para>
        ///  <code>TERMINATED</code> - The session and its resources are no longer running.
        /// </para>
        ///  
        /// <para>
        ///  <code>DEGRADED</code> - The session has no healthy coordinators.
        /// </para>
        ///  
        /// <para>
        ///  <code>FAILED</code> - Due to a failure, the session and its resources are no longer
        /// running.
        /// </para>
        /// </summary>
        public SessionState StateFilter
        {
            get { return this._stateFilter; }
            set { this._stateFilter = value; }
        }

        // Check to see if StateFilter property is set
        internal bool IsSetStateFilter()
        {
            return this._stateFilter != null;
        }

        /// <summary>
        /// Gets and sets the property WorkGroup. 
        /// <para>
        /// The workgroup to which the session belongs.
        /// </para>
        /// </summary>
        [AWSProperty(Required=true)]
        public string WorkGroup
        {
            get { return this._workGroup; }
            set { this._workGroup = value; }
        }

        // Check to see if WorkGroup property is set
        internal bool IsSetWorkGroup()
        {
            return this._workGroup != null;
        }

    }
}