<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<?xml version="1.0" encoding="utf-8"?>
<package> 
  <metadata> 
    <id><#=this.Session["AssemblyName"]#></id>
    <title><#=this.Session["NuGetTitle"]#></title>
    <version><#=this.Session["AssemblyVersion"]#><#=this.Session["NuGetPreviewFlag"]#></version> 
    <authors>Amazon Web Services</authors>
    <description><#=this.Session["AssemblyDescription"]#></description>
    <language>en-US</language>
    <license type="expression">Apache-2.0</license>
    <projectUrl>https://github.com/aws/aws-sdk-net/</projectUrl>
    <tags>AWS Amazon cloud <#=this.Session["BaseName"]#> aws-sdk-v3<#=this.Session["ExtraTags"]#></tags>
    <icon>images\AWSLogo.png</icon>
<# 
    if (bool.Parse(this.Session["requireLicenseAcceptance"].ToString()))
	{#>
    <requireLicenseAcceptance><#=this.Session["requireLicenseAcceptance"]#></requireLicenseAcceptance>
<# 
	}
#>
    <dependencies>
<#
	if(this.Session.ContainsKey("NugetDependencies"))
    {
		var dependencies = (Dictionary<string,List<Dependency>>)this.Session["NugetDependencies"];
		foreach(var dependencyList in dependencies)
		{
			var projectFileConfigurations = (IEnumerable<ProjectFileConfiguration>)this.Session["ProjectFileConfigurations"];
			var targetFramework = projectFileConfigurations.Single(p=>p.Name.Equals(dependencyList.Key)).NuGetTargetPlatform;
#>			
      <group targetFramework="<#=targetFramework#>">
<#
            foreach(var dependency in dependencyList.Value)
            {
#>
        <dependency id="<#=dependency.Name#>" version="<#=dependency.Version#>" />
<#		
            }
#>
<#
            foreach(var awsDependencyKVP in ((IDictionary<string, string>)this.Session["AWSDependencies"]))
            {
#>
        <dependency id="<#=awsDependencyKVP.Key#>" version="<#=awsDependencyKVP.Value#>" />
<#
            }
#>
      </group>
<#
		}
	}	
#>
      <group>
<#
    foreach(var awsDependencyKVP in ((IDictionary<string, string>)this.Session["AWSDependencies"]))
    {
#>
        <dependency id="<#=awsDependencyKVP.Key#>" version="<#=awsDependencyKVP.Value#>" />
<#
    }
#>
      </group>
    </dependencies>
  </metadata> 
  <files>
    <file src="..\..\..\nuget-content\AWSLogo.png" target="images\" />
    <file src="..\..\..\code-analysis\ServiceAnalysis\\<#=this.Session["CodeAnalysisServiceFolder"]#>\bin\Release\*.dll" target="analyzers\dotnet\cs" exclude="**\Microsoft.CodeAnalysis.*;**\System.Collections.Immutable.*;**\System.Reflection.Metadata.*;**\System.Composition.*" />
    <file src="..\..\..\code-analysis\NuGetInstallScripts\*.ps1" target="tools\" />

    <file src=".\bin\Release\net35\\<#=this.Session["AssemblyName"]#>.dll" target="lib\net35" />
    <file src=".\bin\Release\net35\\<#=this.Session["AssemblyName"]#>.xml" target="lib\net35" />
    <file src=".\bin\Release\net35\\<#=this.Session["AssemblyName"]#>.pdb" target="lib\net35" />

    <file src=".\bin\Release\net45\\<#=this.Session["AssemblyName"]#>.dll" target="lib\net45" />
    <file src=".\bin\Release\net45\\<#=this.Session["AssemblyName"]#>.xml" target="lib\net45" />
    <file src=".\bin\Release\net45\\<#=this.Session["AssemblyName"]#>.pdb" target="lib\net45" />

<#	
	if(Convert.ToBoolean(this.Session["NetStandardSupport"]))
	{
#>
    <file src=".\bin\Release\netstandard2.0\\<#=this.Session["AssemblyName"]#>.dll" target="lib\netstandard2.0" />
    <file src=".\bin\Release\netstandard2.0\\<#=this.Session["AssemblyName"]#>.xml" target="lib\netstandard2.0" />
    <file src=".\bin\Release\netstandard2.0\\<#=this.Session["AssemblyName"]#>.pdb" target="lib\netstandard2.0" />

    <file src=".\bin\Release\netcoreapp3.1\\<#=this.Session["AssemblyName"]#>.dll" target="lib\netcoreapp3.1" />
    <file src=".\bin\Release\netcoreapp3.1\\<#=this.Session["AssemblyName"]#>.xml" target="lib\netcoreapp3.1" />
    <file src=".\bin\Release\netcoreapp3.1\\<#=this.Session["AssemblyName"]#>.pdb" target="lib\netcoreapp3.1" />

    <file src="<#=Path.Combine(".", "bin", "Release", "net8.0", (string)this.Session["AssemblyName"] + ".dll")#>" target="lib\net8.0" />
    <file src="<#=Path.Combine(".", "bin", "Release", "net8.0", (string)this.Session["AssemblyName"] + ".xml")#>" target="lib\net8.0" />
    <file src="<#=Path.Combine(".", "bin", "Release", "net8.0", (string)this.Session["AssemblyName"] + ".pdb")#>" target="lib\net8.0" />
<#
	}
#>

  </files>
</package>