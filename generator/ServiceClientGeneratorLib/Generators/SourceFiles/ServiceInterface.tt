<#@ template language="C#" inherits="BaseGenerator" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	AddLicenseHeader();
#>


using System;
using System.Collections.Generic;

using Amazon.Runtime;
using <#=this.Config.Namespace#>.Model;

namespace <#=this.Config.Namespace#>
{
<#    this.FormatServiceInterfaceDocumentation(this.Config.ServiceModel.Documentation); #>
	public partial interface IAmazon<#=this.Config.BaseName#> : IAmazonService, IDisposable
	{

		<#
		foreach(var operation in this.Config.ServiceModel.Operations)
		{
            if(operation.IsInternal)
                continue;
		#>

		#region  <#=operation.Name#>

<#
        // Creates a method for the operation that takes no parameters if the operation has a request that requires no members to be set
        if (this.Config.ServiceModel.Customizations.CreateNoArgOverload(operation.Name))
        {
#>
<#
        this.FormatOperationDocumentationSync(operation, false);
		if(operation.IsDeprecated)
		{
#>
		[Obsolete("<#=operation.DeprecationMessage#>")]
<#		
		}
#>
        <#=operation.Name#>Response <#=operation.Name#>();
<#
        }

        AddSimpleClientMethodInterfaces(operation, true);
#>
<#
        this.FormatOperationDocumentationSync(operation, true);
		if(operation.IsDeprecated)
		{
#>
		[Obsolete("<#=operation.DeprecationMessage#>")]
<#		
		}
#>
        <#=operation.Name#>Response <#=operation.Name#>(<#=operation.Name#>Request request);

<#AddBeginAsyncDocumentation(operation.Name);
		if(operation.IsDeprecated)
		{
#>
		[Obsolete("<#=operation.DeprecationMessage#>")]
<#		
		}
#>
        IAsyncResult Begin<#=operation.Name#>(<#=operation.Name#>Request request, AsyncCallback callback, object state);



<#AddEndAsyncDocumentation(operation.Name);
		if(operation.IsDeprecated)
		{
#>
		[Obsolete("<#=operation.DeprecationMessage#>")]
<#		
		}
#>
        <#=operation.Name#>Response End<#=operation.Name#>(IAsyncResult asyncResult);

		#endregion
		<#
		}
		#>

    }
}