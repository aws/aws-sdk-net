{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2020-07-14",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"rpcv2protocol",
    "protocol":"smithy-rpc-v2-cbor",
    "protocols":["smithy-rpc-v2-cbor"],
    "serviceFullName":"RpcV2 Protocol Service",
    "serviceId":"RpcV2Protocol",
    "signatureVersion":"v4",
    "signingName":"rpcv2protocol",
    "targetPrefix":"RpcV2Protocol",
    "uid":"rpcv2protocol-2020-07-14"
  },
  "operations":{
    "EmptyInputOutput":{
      "name":"EmptyInputOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EmptyStructure"},
      "output":{"shape":"EmptyStructure"}
    },
    "Float16":{
      "name":"Float16",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"Float16Output"}
    },
    "FractionalSeconds":{
      "name":"FractionalSeconds",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"FractionalSecondsOutput"}
    },
    "GreetingWithErrors":{
      "name":"GreetingWithErrors",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"GreetingWithErrorsOutput"},
      "errors":[
        {"shape":"ComplexError"},
        {"shape":"InvalidGreeting"}
      ],
      "documentation":"<p>This operation has three possible return values:</p> <ol> <li>A successful response in the form of GreetingWithErrorsOutput</li> <li>An InvalidGreeting error.</li> <li>A ComplexError error.</li> </ol> <p>Implementations must be able to successfully take a response and properly deserialize successful and error responses.</p>",
      "idempotent":true
    },
    "NoInputOutput":{
      "name":"NoInputOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      }
    },
    "OptionalInputOutput":{
      "name":"OptionalInputOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SimpleStructure"},
      "output":{"shape":"SimpleStructure"}
    },
    "RecursiveShapes":{
      "name":"RecursiveShapes",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RecursiveShapesInputOutput"},
      "output":{"shape":"RecursiveShapesInputOutput"}
    },
    "RpcV2CborDenseMaps":{
      "name":"RpcV2CborDenseMaps",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RpcV2CborDenseMapsInputOutput"},
      "output":{"shape":"RpcV2CborDenseMapsInputOutput"},
      "errors":[
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>The example tests basic map serialization.</p>"
    },
    "RpcV2CborLists":{
      "name":"RpcV2CborLists",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RpcV2CborListInputOutput"},
      "output":{"shape":"RpcV2CborListInputOutput"},
      "errors":[
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>This test case serializes JSON lists for the following cases for both input and output:</p> <ol> <li>Normal lists.</li> <li>Normal sets.</li> <li>Lists of lists.</li> <li>Lists of structures.</li> </ol>",
      "idempotent":true
    },
    "SimpleScalarProperties":{
      "name":"SimpleScalarProperties",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SimpleScalarStructure"},
      "output":{"shape":"SimpleScalarStructure"}
    }
  },
  "shapes":{
    "Blob":{"type":"blob"},
    "BlobList":{
      "type":"list",
      "member":{"shape":"Blob"}
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "BooleanList":{
      "type":"list",
      "member":{"shape":"Boolean"}
    },
    "ComplexError":{
      "type":"structure",
      "members":{
        "TopLevel":{"shape":"String"},
        "Nested":{"shape":"ComplexNestedErrorData"}
      },
      "documentation":"<p>This error is thrown when a request is invalid.</p>",
      "exception":true
    },
    "ComplexNestedErrorData":{
      "type":"structure",
      "members":{
        "Foo":{"shape":"String"}
      }
    },
    "DateTime":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "DenseBooleanMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"Boolean"}
    },
    "DenseNumberMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"Integer"}
    },
    "DenseSetMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"StringSet"}
    },
    "DenseStringMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "DenseStructMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"GreetingStruct"}
    },
    "Double":{
      "type":"double",
      "box":true
    },
    "EmptyStructure":{
      "type":"structure",
      "members":{
      }
    },
    "Float":{
      "type":"float",
      "box":true
    },
    "Float16Output":{
      "type":"structure",
      "members":{
        "value":{"shape":"Double"}
      }
    },
    "FooEnum":{
      "type":"string",
      "enum":[
        "Foo",
        "Baz",
        "Bar",
        "1",
        "0"
      ]
    },
    "FooEnumList":{
      "type":"list",
      "member":{"shape":"FooEnum"}
    },
    "FractionalSecondsOutput":{
      "type":"structure",
      "members":{
        "datetime":{"shape":"DateTime"}
      }
    },
    "GreetingStruct":{
      "type":"structure",
      "members":{
        "hi":{"shape":"String"}
      }
    },
    "GreetingWithErrorsOutput":{
      "type":"structure",
      "members":{
        "greeting":{"shape":"String"}
      }
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "IntegerEnum":{
      "type":"integer",
      "box":true
    },
    "IntegerEnumList":{
      "type":"list",
      "member":{"shape":"IntegerEnum"}
    },
    "IntegerList":{
      "type":"list",
      "member":{"shape":"Integer"}
    },
    "InvalidGreeting":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>This error is thrown when an invalid greeting value is provided.</p>",
      "exception":true
    },
    "Long":{
      "type":"long",
      "box":true
    },
    "NestedStringList":{
      "type":"list",
      "member":{"shape":"StringList"},
      "documentation":"<p>A list of lists of strings.</p>"
    },
    "RecursiveShapesInputOutput":{
      "type":"structure",
      "members":{
        "nested":{"shape":"RecursiveShapesInputOutputNested1"}
      }
    },
    "RecursiveShapesInputOutputNested1":{
      "type":"structure",
      "members":{
        "foo":{"shape":"String"},
        "nested":{"shape":"RecursiveShapesInputOutputNested2"}
      }
    },
    "RecursiveShapesInputOutputNested2":{
      "type":"structure",
      "members":{
        "bar":{"shape":"String"},
        "recursiveMember":{"shape":"RecursiveShapesInputOutputNested1"}
      }
    },
    "RpcV2CborDenseMapsInputOutput":{
      "type":"structure",
      "members":{
        "denseStructMap":{"shape":"DenseStructMap"},
        "denseNumberMap":{"shape":"DenseNumberMap"},
        "denseBooleanMap":{"shape":"DenseBooleanMap"},
        "denseStringMap":{"shape":"DenseStringMap"},
        "denseSetMap":{"shape":"DenseSetMap"}
      }
    },
    "RpcV2CborListInputOutput":{
      "type":"structure",
      "members":{
        "stringList":{"shape":"StringList"},
        "stringSet":{"shape":"StringSet"},
        "integerList":{"shape":"IntegerList"},
        "booleanList":{"shape":"BooleanList"},
        "timestampList":{"shape":"TimestampList"},
        "enumList":{"shape":"FooEnumList"},
        "intEnumList":{"shape":"IntegerEnumList"},
        "nestedStringList":{"shape":"NestedStringList"},
        "structureList":{"shape":"StructureList"},
        "blobList":{"shape":"BlobList"}
      }
    },
    "SimpleScalarStructure":{
      "type":"structure",
      "members":{
        "trueBooleanValue":{"shape":"Boolean"},
        "falseBooleanValue":{"shape":"Boolean"},
        "byteValue":{"shape":"Integer"},
        "doubleValue":{"shape":"Double"},
        "floatValue":{"shape":"Float"},
        "integerValue":{"shape":"Integer"},
        "longValue":{"shape":"Long"},
        "shortValue":{"shape":"Integer"},
        "stringValue":{"shape":"String"},
        "blobValue":{"shape":"Blob"}
      }
    },
    "SimpleStructure":{
      "type":"structure",
      "members":{
        "value":{"shape":"String"}
      }
    },
    "String":{"type":"string"},
    "StringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "StringSet":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "StructureList":{
      "type":"list",
      "member":{"shape":"StructureListMember"}
    },
    "StructureListMember":{
      "type":"structure",
      "members":{
        "a":{"shape":"String"},
        "b":{"shape":"String"}
      }
    },
    "Timestamp":{"type":"timestamp"},
    "TimestampList":{
      "type":"list",
      "member":{"shape":"Timestamp"}
    },
    "ValidationException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>A summary of the validation failure.</p>"
        },
        "fieldList":{
          "shape":"ValidationExceptionFieldList",
          "documentation":"<p>A list of specific failures encountered while validating the input. A member can appear in this list more than once if it failed to satisfy multiple constraints.</p>"
        }
      },
      "documentation":"<p>A standard error for input validation failures. This should be thrown by services when a member of the input structure falls outside of the modeled or documented constraints.</p>",
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "path",
        "message"
      ],
      "members":{
        "path":{
          "shape":"String",
          "documentation":"<p>A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>A detailed description of the validation failure.</p>"
        }
      },
      "documentation":"<p>Describes one specific validation failure for an input member.</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"}
    }
  }
}
