{
    "runtimePipelineOverride": {
        "overrides": [
            { "operation": "addBefore", "newType": "Amazon.S3.Internal.AmazonS3PreMarshallHandler", "targetType": "Amazon.Runtime.Internal.Marshaller" },
            { "operation": "addAfter", "newType": "Amazon.S3.Internal.AmazonS3KmsHandler", "targetType": "Amazon.Runtime.Internal.EndpointResolver" },
            { "operation": "addBefore", "newType": "Amazon.S3.Internal.AmazonS3ResponseHandler", "targetType": "Amazon.Runtime.Internal.Unmarshaller" },
            { "operation": "addAfter", "newType": "Amazon.S3.Internal.AmazonS3ExceptionHandler", "targetType": "Amazon.Runtime.Internal.ErrorCallbackHandler" },
            { "operation": "addAfter", "newType": "Amazon.S3.Internal.AmazonS3RedirectHandler", "targetType": "Amazon.Runtime.Internal.Unmarshaller" },
            {
                "condition":"this.Config.RetryMode == RequestRetryMode.Legacy",
                "operation": "replace",
                "newType": "Amazon.Runtime.Internal.RetryHandler",
                "targetType": "Amazon.Runtime.Internal.RetryHandler",
                "constructorInput": "new Amazon.S3.Internal.AmazonS3RetryPolicy(this.Config)"
            },
            {
                "condition":"this.Config.RetryMode == RequestRetryMode.Standard",
                "operation": "replace",
                "newType": "Amazon.Runtime.Internal.RetryHandler",
                "targetType": "Amazon.Runtime.Internal.RetryHandler",
                "constructorInput": "new Amazon.S3.Internal.AmazonS3StandardRetryPolicy(this.Config)"
            },
            {
                "condition":"this.Config.RetryMode == RequestRetryMode.Adaptive",
                "operation": "replace",
                "newType": "Amazon.Runtime.Internal.RetryHandler",
                "targetType": "Amazon.Runtime.Internal.RetryHandler",
                "constructorInput": "new Amazon.S3.Internal.AmazonS3AdaptiveRetryPolicy(this.Config)"
            }
        ]
    },
    "noArgOverloads": [
        "ListBuckets"
    ],
    "shapeModifiers": {
        "*": {
            "modify": [
                {
                    "Bucket": { "emitPropertyName": "BucketName" }
                }
            ]
        },
        "CloudFunctionConfiguration": {
            "modify": [
                {
                    "Event": { "deprecatedMessage": "This property is deprecated. Use Events instead." }
                }
            ]
        },
        "CompleteMultipartUploadRequest": {
            "exclude": [
                "MultipartUpload"
            ],
            "inject": [
                {
                    "PartETags": {
                        "shape": "CompletedPartList"
                    }
                }
            ]
        },
        "CopyObjectRequest": {
            "modify": [
                {
                    "Bucket": { "emitPropertyName": "DestinationBucket" }
                }
            ],
            "exclude": [
                "CopySource",
                "Key"
            ],
            "inject": [
                {
                    "SourceBucket": {
                        "shape": "BucketName"
                    }
                },
                {
                    "SourceKey": {
                        "shape": "ObjectKey"
                    }
                },
                {
                    "SourceVersionId": {
                        "shape": "CopySourceVersionId"
                    }
                },
                {
                    "DestinationBucket": {
                        "shape": "BucketName"
                    }
                },
                {
                    "DestinationKey": {
                        "shape": "ObjectKey"
                    }
                }
            ]
        },
        "DeleteObjectsRequest": {
            "exclude": [
                "Delete"
            ],
            "inject": [
                {
                    "Objects": {
                        "shape": "ObjectIdentifierList"
                    }
                },
                {
                    "Quiet": {
                        "shape": "Quiet"
                    }
                }
            ]
        },
        "LifecycleRule": {
            "modify": [
                {
                    "Prefix": { "deprecatedMessage": "This property is deprecated. Use Filter instead." }
                }
            ]
        },
        "PutBucketTaggingRequest": {
            "exclude": [ "Tagging" ],
            "inject": [
                {
                    "TagSet": {
                        "shape": "TagSet"
                    }
                }
            ]
        },
        "PutBucketVersioningRequest": {
            "modify": [
                {
                    "VersioningConfiguration": { "emitPropertyName": "VersioningConfig" }
                }
            ]
        },
        "PutBucketCorsRequest": {
            "modify": [
                {
                    "CORSConfiguration": { "emitPropertyName": "Configuration" }
                }
            ]
        },
        "PutBucketLifecycleConfigurationRequest": {
            "exclude": [
                "LifecycleConfiguration"
            ],
            "inject": [
                {
                    "Configuration": {
                        "shape": "LifecycleConfiguration"
                    }
                }
            ]
        },
        "QueueConfigurationDeprecated": {
            "modify": [
                {
                    "Event": { "deprecatedMessage": "This property is deprecated. Use Events instead." }
                }
            ]
        },
        "RestoreObjectRequest": {
            "exclude": [ "RestoreRequest" ],
            "inject": [
                {
                    "Days": {
                        "shape": "Days"
                    }
                }
            ]
        },
        "TopicConfigurationDeprecated": {
            "modify": [
                {
                    "Event": { "deprecatedMessage": "This property is deprecated. Use Events instead." }
                }
            ]
        },
        "UploadPartCopyRequest": {
            "modify": [
                {
                    "Bucket": { "emitPropertyName": "DestinationBucket" }
                }
            ],
            "exclude": [
                "CopySource",
                "Key"
            ],
            "inject": [
                {
                    "SourceBucket": {
                        "shape": "BucketName"
                    }
                },
                {
                    "SourceKey": {
                        "shape": "ObjectKey"
                    }
                },
                {
                    "SourceVersionId": {
                        "shape": "CopySourceVersionId"
                    }
                },
                {
                    "DestinationBucket": {
                        "shape": "BucketName"
                    }
                },
                {
                    "DestinationKey": {
                        "shape": "ObjectKey"
                    }
                }
            ]
        }
    },
    "operationModifiers": {
        "CreateBucket": {
            "name": "PutBucket"
        },
        "CreateMultipartUpload": {
            "name": "InitiateMultipartUpload"
        },
        "DeleteBucketCors": {
            "name": "DeleteCORSConfiguration"
        },
        "DeleteBucketLifecycle": {
            "name": "DeleteLifecycleConfiguration"
        },
        "GetBucketAcl": {
            "name": "GetACL"
        },
        "GetBucketCors": {
            "name": "GetCORSConfiguration"
        },
        "GetObjectAcl": {
            "exclude": true
        },
        "HeadBucket": {
            "internal": true
        },
        "HeadObject": {
            "name": "GetObjectMetadata"
        },
        "ListObjectVersions": {
            "name": "ListVersions"
        },
        "PutBucketAcl": {
            "name": "PutACL"
        },
        "PutBucketCors": {
            "name": "PutCORSConfiguration"
        },
        "PutObjectAcl": {
            "exclude": true
        },
        "UploadPartCopy": {
            "name": "CopyPart"
        },
        "GetBucketNotification": {
            "exclude": true
        },
        "GetBucketLifecycle": {
            "exclude": true
        },
        "PutBucketLifecycle": {
            "exclude": true
        },
        "PutBucketNotification": {
            "exclude": true
        },
        "PutBucketNotificationConfiguration": {
            "name": "PutBucketNotification"
        },
        "PutBucketLifecycleConfiguration": {
            "name": "PutLifecycleConfiguration"
        },
        "GetBucketLifecycleConfiguration": {
            "name": "GetLifecycleConfiguration"
        },
        "GetBucketNotificationConfiguration": {
            "name": "GetBucketNotification"
        },
        "GetBucketReplication": {
            "documentation": "Retrieves the replication configuration for the given Amazon S3 bucket."
        }
    }
}
